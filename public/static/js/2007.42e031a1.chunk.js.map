{"version":3,"file":"static/js/2007.42e031a1.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","components/shared-components/Flex/index.js","constants/ChartConstant.js","layouts/inner-app-layout/index.js","utils/index.js","views/app-views/apps/chat/Conversation.js","views/app-views/apps/chat/ChatContent.js","views/app-views/apps/chat/ChatMenu.js","views/app-views/apps/chat/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","/** @jsxImportSource @emotion/react */\r\nimport { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer, Card } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, DARK_MODE, BORDER } from 'constants/ThemeConstant';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst MainContent = styled.div(({hasPageHeader, gutter}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tminHeight: `calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px * 2  - 2px);`,\r\n\t\twidth: '100%',\r\n\t\tpadding: gutter ? 24: 0\r\n\t}\r\n\r\n\tif (hasPageHeader) {\r\n\t\tbaseStyle.minHeight = '75vh'\r\n\t}\r\n\r\n\treturn baseStyle\r\n})\r\n\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<div style={{width: `${sideContentWidth}px`, borderInlineEnd: `1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR }`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\topen={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className=\"mb-0\" css={css`\r\n\t\t\t>.ant-card-body {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 0px;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<MainContent hasPageHeader={pageHeader} gutter={sideContentGutter}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</MainContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React, { useRef, useState, useEffect } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Avatar, Divider, Input, Form, Button, Menu } from 'antd';\r\nimport { \r\n\tFileOutlined, \r\n\tSendOutlined, \r\n\tPaperClipOutlined, \r\n\tSmileOutlined, \r\n\tAudioMutedOutlined,\r\n\tUserOutlined,\r\n\tDeleteOutlined\r\n} from '@ant-design/icons';\r\nimport { Scrollbars } from 'react-custom-scrollbars-2';\r\nimport Flex from 'components/shared-components/Flex';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst menu = () => (\r\n\t<Menu>\r\n\t\t<Menu.Item key=\"0\">\r\n\t\t\t<UserOutlined />\r\n\t\t\t<span>User Info</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Item key=\"1\">\r\n\t\t\t<AudioMutedOutlined />\r\n\t\t\t<span>Mute Chat</span>\r\n\t\t</Menu.Item>\r\n\t\t<Menu.Divider />\r\n\t\t<Menu.Item key=\"3\">\r\n\t\t\t<DeleteOutlined />\r\n\t\t\t<span>Delete Chat</span>\r\n\t\t</Menu.Item>\r\n\t</Menu>\r\n);\r\n\r\nconst Conversation = () => {\r\n\r\n\tconst formRef = useRef();\r\n\tconst chatBodyRef = useRef();\r\n\r\n\tconst params = useParams();\r\n\r\n\tconst [ info, setInfo ] = useState({});\r\n\tconst [ msgList, setMsgList ] = useState([]);\r\n\r\n\tconst { id } = params\r\n\r\n\tconst getUserId = () => {\r\n\t\treturn parseInt(parseInt(id))\r\n\t}\r\n\t\r\n\tconst getConversation = currentId => {\r\n\t\tconst data = ChatData.filter(elm => elm.id === currentId)\r\n\r\n\t\tsetInfo(data[0])\r\n\t\tsetMsgList(data[0].msg)\r\n\t}\r\n\r\n\tconst getMsgType = obj => {\r\n\t\tswitch (obj.msgType) {\r\n\t\t\tcase 'text':\r\n\t\t\t\treturn <span>{obj.text}</span>\r\n\t\t\tcase 'image':\r\n\t\t\t\treturn <img src={obj.text} alt={obj.text} />\r\n\t\t\tcase 'file':\r\n\t\t\t\treturn (\r\n\t\t\t\t<Flex alignItems=\"center\" className=\"msg-file\">\r\n\t\t\t\t\t<FileOutlined className=\"font-size-md\"/>\r\n\t\t\t\t\t<span className=\"ml-2 font-weight-semibold text-link pointer\">\r\n\t\t\t\t\t\t<u>{obj.text}</u>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t)\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\tchatBodyRef.current.scrollToBottom()\r\n\t}\r\n\r\n\tconst onSend = values => {\r\n\t\tif (values.newMsg) {\r\n\t\t\tconst newMsgData = {\r\n\t\t\t\tavatar: \"\",\r\n\t\t\t\tfrom: \"me\",\r\n\t\t\t\tmsgType: \"text\",\r\n\t\t\t\ttext: values.newMsg,\r\n\t\t\t\ttime: \"\",\r\n\t\t\t};\r\n\r\n\t\t\tformRef.current.setFieldsValue({\r\n\t\t\t\tnewMsg: ''\r\n\t\t\t});\r\n\r\n\t\t\tsetMsgList([...msgList, newMsgData]);\r\n\t\t}\r\n\t};\r\n\t\r\n\tconst emptyClick = (e) => {\r\n    \te.preventDefault();\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetConversation(getUserId())\r\n\t\tscrollToBottom()\r\n\t}, [id])\r\n\t\r\n\tconst chatContentHeader = name => (\r\n\t\t<div className=\"chat-content-header\">\r\n\t\t\t<h4 className=\"mb-0\">{name}</h4>\r\n\t\t\t<div>\r\n\t\t\t\t<EllipsisDropdown menu={menu}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst chatContentBody = (props, id) => (\r\n\t\t<div className=\"chat-content-body\">\r\n\t\t\t<Scrollbars ref={chatBodyRef} autoHide>\r\n\t\t\t\t{\r\n\t\t\t\t\tprops.map((elm, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`msg-${id}-${i}`} \r\n\t\t\t\t\t\t\tclassName={`msg ${elm.msgType === 'date'? 'datetime' : ''} ${elm.from === 'opposite'? 'msg-recipient' : elm.from === 'me'? 'msg-sent' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.avatar? \r\n\t\t\t\t\t\t\t\t<div className=\"mr-2\">\r\n\t\t\t\t\t\t\t\t\t<Avatar src={elm.avatar} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.text?\r\n\t\t\t\t\t\t\t\t<div className={`bubble ${!elm.avatar? 'ml-5' : ''}`}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"bubble-wrapper\">\r\n\t\t\t\t\t\t\t\t\t\t{getMsgType(elm)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\telm.msgType === 'date'?\r\n\t\t\t\t\t\t\t\t<Divider>{elm.time}</Divider>\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</Scrollbars>\r\n\t\t</div>\r\n\t)\r\n\r\n\tconst chatContentFooter = () => (\r\n\t\t<div className=\"chat-content-footer\">\r\n\t\t\t<Form name=\"msgInput\" ref={formRef} onFinish={onSend} className=\"w-100\">\r\n\t\t\t\t<Form.Item name=\"newMsg\" className=\"mb-0\">\r\n\t\t\t\t\t<Input \r\n\t\t\t\t\t\tautoComplete=\"off\" \r\n\t\t\t\t\t\tplaceholder=\"Type a message...\"\r\n\t\t\t\t\t\tsuffix={\r\n\t\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t\t<a href=\"/#\"  className=\"text-dark font-size-lg mr-3\" onClick={emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<SmileOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<a href=\"/#\" className=\"text-dark font-size-lg mr-3\" onClick={emptyClick}>\r\n\t\t\t\t\t\t\t\t\t<PaperClipOutlined />\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button shape=\"circle\" type=\"primary\" size=\"small\" onClick={onSend} htmlType=\"submit\">\r\n\t\t\t\t\t\t\t\t\t<SendOutlined />\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-content\">\r\n\t\t\t\t{chatContentHeader(info.name)}\r\n\t\t\t\t{chatContentBody(msgList, params.id)}\r\n\t\t\t\t{chatContentFooter()}\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Conversation\r\n","import React from 'react'\r\nimport { Route, Routes, } from 'react-router-dom';\r\nimport Conversation from './Conversation';\r\n\r\nconst ConversationEmpty = () => (\r\n  <div className=\"chat-content-empty\">\r\n    <div className=\"text-center\">\r\n      <img src=\"/img/others/img-11.png\" alt=\"Start a Conversation\" />\r\n      <h1 className=\"font-weight-light\">Start a conversation</h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nconst ChatContent = () => {\r\n  return (\r\n    <Routes>\r\n      <Route path={`:id`} element={<Conversation />} />\r\n      <Route path={`/`} element={<ConversationEmpty />} />\r\n    </Routes>\r\n  )\r\n}\r\n\r\nexport default ChatContent\r\n","import React, { useState } from 'react'\r\nimport ChatData from \"assets/data/chat.data.json\"\r\nimport { Badge, Input } from 'antd';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { COLOR_1 } from 'constants/ChartConstant';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\n\r\nconst ChatMenu = () => {\r\n\r\n\tconst [list, setList] = useState(ChatData);\r\n\r\n\tconst location = useLocation()\r\n\r\n\tlet navigate = useNavigate();\r\n\r\n\tconst openChat = id => {\r\n\r\n\t\tconst data = list.map( elm => {\r\n\t\t\tif(elm.id === id) {\r\n\t\t\t\telm.unread = 0\r\n\t\t\t}\r\n\t\t\treturn elm\r\n\t\t})\r\n\t\tsetList(data)\r\n\t\tnavigate(`${id}`)\r\n\t}\r\n\r\n\tconst searchOnChange = e => {\r\n\t\tconst query = e.target.value;\r\n\t\tconst data = ChatData.filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t})\r\n\t\tsetList(data)\r\n\t}\r\n\r\n\tconst id = parseInt(location.pathname.match(/\\/([^/]+)\\/?$/)[1])\r\n\r\n\treturn (\r\n\t\t<div className=\"chat-menu\">\r\n\t\t\t<div className=\"chat-menu-toolbar\">\r\n\t\t\t\t<Input \r\n\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\tonChange={searchOnChange}\r\n\t\t\t\t\tprefix={\r\n\t\t\t\t\t\t<SearchOutlined className=\"font-size-lg mr-2\"/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chat-menu-list\">\r\n\t\t\t\t{\r\n\t\t\t\t\tlist.map( (item, i) => (\r\n\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\tkey={`chat-item-${item.id}`} \r\n\t\t\t\t\t\t\tonClick={() => openChat(item.id)} \r\n\t\t\t\t\t\t\tclassName={`chat-menu-list-item ${i === (list.length - 1)? 'last' : ''} ${item.id === id? 'selected' : ''}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<AvatarStatus src={item.avatar} name={item.name} subTitle={item.msg[item.msg.length - 1].text}/>\r\n\t\t\t\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t\t\t\t<div className=\"chat-menu-list-item-time\">{item.time}</div>\r\n\t\t\t\t\t\t\t\t{item.unread === 0 ? <span></span> : <Badge count={item.unread} style={{backgroundColor: COLOR_1}}/>}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ChatMenu\r\n","import React from 'react'\r\nimport InnerAppLayout from 'layouts/inner-app-layout';\r\nimport ChatContent from './ChatContent';\r\nimport ChatMenu from './ChatMenu';\r\n\r\nconst Chat = props => {\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t\t<InnerAppLayout \r\n\t\t\t\tsideContent={<ChatMenu {...props}/>}\r\n\t\t\t\tmainContent={<ChatContent {...props}/>}\r\n\t\t\t\tsideContentWidth={450}\r\n\t\t\t\tsideContentGutter={false}\r\n\t\t\t\tborder\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat\r\n"],"names":["renderAvatar","props","_jsx","Avatar","className","concat","type","children","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","EllipsisDropdown","Dropdown","overlay","menu","placement","trigger","EllipsisOutlined","defaultProps","Menu","styled","div","_ref","justifyContent","alignItems","flexDirection","padding","margin","baseStyle","display","COLOR_1","COLOR_2","COLOR_4","COLOR_1_LIGHT","COLOR_2_LIGHT","COLORS","COLOR_AXES","COLOR_TEXT","apexLineChartDefaultOption","chart","zoom","enabled","toolbar","show","colors","dataLabels","stroke","width","curve","lineCap","legend","position","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","series","seriesIndex","dataPointIndex","xaxis","categories","grid","lines","yaxis","apexAreaChartDefaultOption","apexBarChartDefaultOption","plotOptions","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","apexPieChartDefaultOption","pie","donut","labels","total","showAlways","label","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","sparkline","fixed","x","title","seriesName","marker","useBreakpoint","Grid","MainContent","hasPageHeader","gutter","minHeight","TEMPLATE","CONTENT_HEIGHT_OFFSET","LAYOUT_CONTENT_GUTTER","SideContent","sideContent","sideContentWidth","border","currentTheme","useSelector","state","theme","style","borderInlineEnd","DARK_MODE","BORDER_BASE_COLOR","BORDER","BASE_COLOR","SideContentMobile","visible","onSideContentClose","Drawer","closable","onClose","open","bodyStyle","paddingLeft","paddingRight","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","setVisible","useState","Card","css","_templateObject","_taggedTemplateLiteral","e","MenuOutlined","getNameInitial","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","path","route","p","hasOwnProperty","this","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","percent","R","G","B","RR","toString","length","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","key","toLowerCase","filterArray","list","value","data","filter","item","deleteArrayRow","wildCardSearch","input","searchText","screens","breakpoints","push","Item","UserOutlined","AudioMutedOutlined","Divider","DeleteOutlined","Conversation","formRef","useRef","chatBodyRef","params","useParams","info","setInfo","msgList","setMsgList","getMsgType","obj","msgType","alt","Flex","FileOutlined","onSend","values","newMsg","newMsgData","avatar","from","time","current","setFieldsValue","emptyClick","preventDefault","useEffect","currentId","ChatData","elm","msg","getConversation","scrollToBottom","chatContentBody","Scrollbars","ref","autoHide","map","Form","onFinish","Input","autoComplete","placeholder","href","SmileOutlined","PaperClipOutlined","Button","htmlType","SendOutlined","ConversationEmpty","ChatContent","Routes","Route","element","ChatMenu","setList","location","useLocation","navigate","useNavigate","pathname","onChange","query","target","prefix","SearchOutlined","unread","openChat","AvatarStatus","Badge","count","backgroundColor","InnerAppLayout"],"sourceRoot":""}