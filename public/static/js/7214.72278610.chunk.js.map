{"version":3,"file":"static/js/7214.72278610.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","components/shared-components/RegiondataWidget/index.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { useState } from 'react'\r\nimport { Card, Row, Col, Badge, Grid } from 'antd';\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport ReactTooltip from 'react-tooltip'\r\nimport WorldMap from 'assets/maps/world-countries-sans-antarctica.json'\r\nimport utils from 'utils'\r\n\r\nconst { useBreakpoint } = Grid;\r\nconst geoUrl = WorldMap;\r\nconst mapColor = '#F5F4F6';\r\nconst hoverPercentage = -10;\r\n\r\nconst getHighlightedRegion = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn elm.color\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mapColor\r\n\t}\r\n\treturn mapColor\r\n}\r\n\r\nconst getRegionHoverColor = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn utils.shadeColor(elm.color, hoverPercentage)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n\t}\r\n\treturn utils.shadeColor(mapColor, hoverPercentage)\r\n}\r\n\r\nconst getRegionValue = (name, data) => {\r\n\tif(data.length > 0 || name) {\r\n\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\tconst elm = data[i];\r\n\t\t\tif(name === elm.name) {\r\n\t\t\t\treturn `${elm.name} â€” ${elm.value}`\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ''\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst MapChart = ({ setTooltipContent, data, mapSource, mapType }) => {\r\n  \treturn (\r\n\t\t<ComposableMap style={{transform: `${mapType === 'world' ? 'translateY(20px)' : 'none'}`}} data-tip=\"\" height={380} projectionConfig={{ scale: 145 }}>\r\n\t\t\t<Geographies geography={mapSource}>\r\n\t\t\t\t{({ geographies }) =>\r\n\t\t\t\t\tgeographies.map(geo => {\r\n\t\t\t\t\t\tconst geoName = mapType === 'world' ? geo.properties.name : geo.properties.NAME_1 \r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Geography\r\n\t\t\t\t\t\t\t\tkey={geo.rsmKey}\r\n\t\t\t\t\t\t\t\tgeography={geo}\r\n\t\t\t\t\t\t\t\tonMouseEnter={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(getRegionValue(geoName, data));\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tonMouseLeave={() => {\r\n\t\t\t\t\t\t\t\t\tsetTooltipContent(\"\");\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tfill={getHighlightedRegion(geoName, data)}\r\n\t\t\t\t\t\t\t\tstroke=\"#D6D6DA\"\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\thover: {\r\n\t\t\t\t\t\t\t\t\t\tfill: getRegionHoverColor(geoName, data),\r\n\t\t\t\t\t\t\t\t\t\toutline: \"none\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</Geographies>\r\n\t\t</ComposableMap>\r\n    )\r\n}\r\n\r\nconst Map = props => {\r\n\tconst { data, mapSource, mapType } = props\r\n\tconst [content, setContent] = useState(\"\");\r\n\treturn (\r\n    <>\r\n      <MapChart data={data} mapSource={mapSource} mapType={mapType} setTooltipContent={setContent} />\r\n      <ReactTooltip>{content}</ReactTooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst renderDataList = data => {\r\n\tconst list = data.map(elm => (\r\n\t\t<div className=\"d-flex align-items-center justify-content-between mb-3\" key={elm.name}>\r\n\t\t\t<div>\r\n\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t<span className=\"text-gray-light mx-2\">{elm.name}</span>\r\n\t\t\t</div>\r\n\t\t\t<span className=\"font-weight-bold text-dark\">{elm.value}</span>\r\n\t\t</div>\r\n\t))\r\n\treturn list\r\n}\r\n\r\nexport const RegiondataWidget = props => {\r\n\tconst { data, mapSource, mapType, title, content, list } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\treturn (\r\n\t\t<Card bodyStyle={{padding: 0}}>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={7} className=\"border-right\">\r\n\t\t\t\t\t<div className=\"d-flex flex-column p-3 justify-content-between h-100\">\r\n\t\t\t\t\t\t<div>{title && <h4 className=\"font-weight-bold\">{title}</h4>}</div>\r\n\t\t\t\t\t\t<div>{content}</div>\r\n\t\t\t\t\t\t<div>{list ? list : renderDataList(data)}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={17}>\r\n\t\t\t\t\t<div className=\"d-flex flex-column justify-content-center\" style={{minHeight: isMobile ? 200 : 435 }}>\r\n\t\t\t\t\t\t<div className=\"p-3 w-100\" >\r\n\t\t\t\t\t\t\t<Map data={data} mapSource={mapSource} mapType={mapType}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nRegiondataWidget.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tdata: PropTypes.array,\r\n\tmapSource: PropTypes.object,\r\n\tmapType: PropTypes.string,\r\n\tcontent: PropTypes.element,\r\n\tlist: PropTypes.element\r\n}\r\n\r\nRegiondataWidget.defaultProps = {\r\n\tdata: [],\r\n\tmapSource: geoUrl,\r\n\tmapType: 'world'\r\n};\r\n\r\nexport default RegiondataWidget"],"names":["styled","div","_ref","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","concat","useBreakpoint","Grid","mapColor","getHighlightedRegion","name","data","length","i","elm","color","getRegionHoverColor","utils","shadeColor","MapChart","setTooltipContent","mapSource","mapType","_jsx","ComposableMap","style","transform","height","projectionConfig","scale","children","Geographies","geography","_ref2","geographies","map","geo","geoName","properties","NAME_1","Geography","onMouseEnter","getRegionValue","value","onMouseLeave","fill","stroke","hover","outline","rsmKey","Map","props","content","setContent","useState","_jsxs","_Fragment","ReactTooltip","renderDataList","className","Badge","RegiondataWidget","title","list","isMobile","getBreakPoint","includes","Card","bodyStyle","Row","Col","xs","sm","md","lg","minHeight","defaultProps","WorldMap"],"sourceRoot":""}