{"version":3,"file":"static/js/1876.6805b899.chunk.js","mappings":"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","sources":["components/shared-components/Card/index.js","components/shared-components/ChartWidget/index.js","components/shared-components/DonutChartWidget/index.js","constants/ChartConstant.js","utils/index.js","views/app-views/dashboards/analytic/AnalyticDashboardData.js","views/app-views/dashboards/analytic/index.js"],"sourcesContent":["import { Card as AntdCard } from 'antd';\r\n\r\n\r\nconst Card = ({style, ...rest}) => {\r\n    return (\r\n        <AntdCard style={{ marginBottom: 20 }} {...rest} />\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from 'components/shared-components/Card';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)))\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst { ref: resizeRef } = useResizeDetector({\r\n\t\tonResize: () => {\r\n\t\t\tonResize()\r\n\t\t}\r\n\t});\r\n\r\n\tconst renderChart = () => (\r\n\t\t<div ref={resizeRef}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra, bodyClass } = props\r\n\tlet options = JSON.parse(JSON.stringify(defaultOption))\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className={`text-center ${bodyClass}`}>\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import { COLORS } from 'constants/ChartConstant';\r\n\r\nexport const regionData = [\r\n\t{\r\n\t\tcolor: '#3e82f7',\r\n\t\tname: 'United States of America',\r\n\t\tvalue: '37.61%'\r\n  \t},\r\n  \t{\r\n\t\tcolor: '#04d182',\r\n\t\tname: 'Brazil',\r\n\t\tvalue: '16.79%'\r\n  \t},\r\n \t {\r\n\t\tcolor: '#ffc542',\r\n\t\tname: 'India',\r\n\t\tvalue: '12.42%'\r\n \t},\r\n  \t{\r\n\t\tcolor: '#fa8c16',\r\n\t\tname: 'China',\r\n\t\tvalue: '9.85%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#ff6b72',\r\n\t\tname: 'Malaysia',\r\n\t\tvalue: '7.68%'\r\n\t},\r\n\t{\r\n\t\tcolor: '#a461d8',\r\n\t\tname: 'Thailand',\r\n\t\tvalue: '5.11%'\r\n\t}\r\n]\r\n\r\nexport const pagesViewData = [\r\n\t{\r\n    title: 'Home',\r\n    url:'/app/home/',\r\n    amount: 7616\r\n  },\r\n  {\r\n    title: 'Resources',\r\n    url:'/app/resources/',\r\n    amount: 6923\r\n  },\r\n  {\r\n    title: 'Integrations',\r\n    url: '/integrations/paypal/',\r\n    amount: 5228\r\n  },\r\n  {\r\n    title: 'Partners',\r\n    url: '/partners/our-partners/',\r\n    amount: 3512\r\n  },\r\n  {\r\n    title: 'Developers',\r\n    url: 'developers/docs/',\r\n    amount: 1707\r\n  }\r\n]\r\n\r\nexport const sessionColor = [COLORS[3], COLORS[0], COLORS[1]]\r\nexport const sessionData = [3561, 1443, 2462]\r\nexport const sessionLabels = [\"Dasktops\", \"Tablets\", \"Mobiles\"]\r\nconst jointSessionData = () => {\r\n\tlet arr = []\r\n\tfor (let i = 0; i < sessionData.length; i++) {\r\n\t\tconst data = sessionData[i];\r\n\t\tconst label = sessionLabels[i];\r\n\t\tconst color = sessionColor[i]\r\n\t\tarr = [...arr, {\r\n\t\t\tdata: data,\r\n\t\t\tlabel: label,\r\n\t\t\tcolor: color\r\n\t\t}]\r\n\t}\r\n\treturn arr\r\n}\r\nexport const conbinedSessionData = jointSessionData()\r\n\r\nexport const socialMediaReferralData = [\r\n\t{\r\n\t\ttitle: 'Facebook',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47]\r\n\t\t}],\r\n\t\tpercentage: 30.1,\r\n\t\tamount: 322\r\n\t},\r\n\t{\r\n\t\ttitle: 'Twitter',\r\n\t\tdata:  [{\r\n\t\t\tdata: [9, 32, 12, 42, 25, 33]\r\n\t\t}],\r\n\t\tpercentage: 21.6,\r\n\t\tamount: 217\r\n\t},\r\n\t{\r\n\t\ttitle: 'Youtube',\r\n\t\tdata:  [{\r\n\t\t\tdata: [10, 9, 29, 19, 22, 9, 12]\r\n\t\t}],\r\n\t\tpercentage: -7.1,\r\n\t\tamount: 188\r\n\t},\r\n\t{\r\n\t\ttitle: 'Linkedin',\r\n\t\tdata:  [{\r\n\t\t\tdata: [25, 66, 41, 89, 63, 25, 44]\r\n\t\t}],\r\n\t\tpercentage: 11.9,\r\n\t\tamount: 207\r\n\t\t},\r\n\t{\r\n\t\ttitle: 'Dribbble',\r\n\t\tdata:  [{\r\n\t\t\tdata: [12, 14, 2, 47, 42, 15, 47, 75, 65, 19, 14]\r\n\t\t}],\r\n\t\tpercentage: -28.5,\r\n\t\tamount: 86\r\n\t}\r\n]\r\n\r\nexport const uniqueVisitorsDataDay = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [12, 4, 7, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [8, 6, 10, 11]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '12:00 AM', \r\n\t\t'6:00 AM', \r\n\t\t'12:00 PM', \r\n\t\t'6:00 PM', \r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataWeek = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '01 Jan', \r\n\t  '02 Jan', \r\n\t  '03 Jan', \r\n\t  '04 Jan', \r\n\t  '05 Jan', \r\n\t  '06 Jan', \r\n\t  '07 Jan'\r\n\t]\r\n}\r\n\r\nexport const uniqueVisitorsDataMonth = {\r\n\tseries: [\r\n\t  {\r\n\t\t\tname: \"Session Duration\",\r\n\t\t\tdata: [35, 41, 62, 42, 13, 18, 29, 25, 31, 15]\r\n\t  },\r\n\t  {\r\n\t\t\tname: \"Page Views\",\r\n\t\t\tdata: [45, 52, 38, 24, 33, 26, 21, 15, 20, 16]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t\t'03 Jan', \r\n\t\t'06 Jan', \r\n\t\t'09 Jan', \r\n\t\t'12 Jan', \r\n\t\t'15 Jan',\r\n\t\t'18 Jan',\r\n\t\t'21 Jan',\r\n\t\t'24 Jan',\r\n\t\t'27 Jan',\r\n\t\t'30 Jan'\r\n\t]\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Row, Col, Card, Avatar, Select, Tag, Badge, List } from 'antd';\r\nimport RegiondataWidget from 'components/shared-components/RegiondataWidget';\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\r\nimport Flex from 'components/shared-components/Flex'\r\nimport ChartWidget from 'components/shared-components/ChartWidget';\r\nimport NumberFormat from 'react-number-format';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexSparklineChartDefultOption, COLORS } from 'constants/ChartConstant';\r\nimport utils from 'utils'\r\nimport {\r\n  FacebookFilled,\r\n  TwitterSquareFilled,\r\n  LinkedinFilled,\r\n  YoutubeFilled,\r\n  DribbbleSquareFilled,\r\n  ArrowUpOutlined,\r\n  ArrowDownOutlined\r\n} from '@ant-design/icons';\r\nimport { \r\n  regionData, \r\n  sessionData, \r\n  sessionLabels, \r\n  conbinedSessionData,\r\n  sessionColor,\r\n  pagesViewData,\r\n  socialMediaReferralData,\r\n  uniqueVisitorsDataWeek,\r\n  uniqueVisitorsDataDay,\r\n  uniqueVisitorsDataMonth\r\n} from './AnalyticDashboardData'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst socialMediaReferralIcon = [\r\n  <FacebookFilled style={{color: '#1774eb'}} />,\r\n  <TwitterSquareFilled style={{color: '#1c9deb'}}/>,\r\n  <YoutubeFilled style={{color: '#f00'}}/>,\r\n  <LinkedinFilled style={{color: '#0077b4'}} />,\r\n  <DribbbleSquareFilled  style={{color: '#e44a85'}} />\r\n]\r\n\r\nconst { Option } = Select;\r\n\r\nconst rederRegionTopEntrance = (\r\n  <div className=\"mb-4\">\r\n    <div className=\"d-flex align-items-center\">\r\n      <Avatar size={20} src=\"/img/flags/us.png\"/>\r\n      <h2 className=\"mb-0 ml-2 font-weight-bold\">37.61%</h2>\r\n    </div>\r\n    <span className=\"text-muted\">Top entrance region</span>\r\n  </div>\r\n)\r\n\r\nexport const AnalyticDashboard = () => {\r\n\r\n  const [uniqueVisitorsData, setUniqueVisitorsData] = useState(uniqueVisitorsDataWeek)\r\n  const { direction } = useSelector(state => state.theme)\r\n\r\n  const handleVisitorsChartChange = value => {\r\n    console.log(value)\r\n    switch (value) {\r\n      case 'day':\r\n        setUniqueVisitorsData(uniqueVisitorsDataDay)\r\n        break;\r\n      case 'week':\r\n        setUniqueVisitorsData(uniqueVisitorsDataWeek)\r\n        break;\r\n      case 'month':\r\n        setUniqueVisitorsData(uniqueVisitorsDataMonth)\r\n        break;\r\n      default:\r\n        setUniqueVisitorsData(uniqueVisitorsDataWeek)\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={18}>\r\n          <RegiondataWidget \r\n            title=\"Entrance by region\"\r\n            data={regionData}\r\n            content={rederRegionTopEntrance}\r\n          />\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={6}>\r\n          <DonutChartWidget \r\n            series={sessionData} \r\n            labels={sessionLabels} \r\n            title=\"Sessions Device\"\r\n            bodyClass=\"my-3\"\r\n            customOptions={{colors: sessionColor}}\r\n            extra={\r\n              <Row  justify=\"center\">\r\n                <Col xs={20} sm={20} md={20} lg={24}>\r\n                  <div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\r\n                    {conbinedSessionData.map(elm => (\r\n                      <Flex alignItems=\"center\" justifyContent=\"space-between\" className=\"mb-3\" key={elm.label}>\r\n                        <Flex gap={5}>\r\n                          <Badge color={elm.color} />\r\n                          <span className=\"text-gray-light\">{elm.label}</span>\r\n                        </Flex>\r\n                        <span className=\"font-weight-bold text-dark\">{elm.data}</span>\r\n                      </Flex>\r\n                    ))}\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={16}>\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={6}>\r\n          <Card title=\"Most visited pages\">\r\n            <List\r\n              itemLayout=\"horizontal\"\r\n              dataSource={pagesViewData}\r\n              renderItem={item => (\r\n                <List.Item>\r\n                  <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                    <div>\r\n                      <h4 className=\"font-weight-bold mb-0\">{item.title}</h4>\r\n                      <span className=\"text-muted\">{item.url}</span>\r\n                    </div>\r\n                    <div>\r\n                      <Tag color=\"blue\">\r\n                        <span className=\"font-weight-bold\">\r\n                          <NumberFormat value={item.amount} thousandSeparator={true} displayType=\"text\" ></NumberFormat>\r\n                        </span>\r\n                      </Tag>\r\n                    </div>\r\n                  </div>\r\n                </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={12} xxl={6}>\r\n          <Card title=\"Social media referrals\">\r\n          <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={socialMediaReferralData}\r\n            renderItem={(item, index) => (\r\n              <List.Item>\r\n                <div className=\"d-flex align-items-center justify-content-between w-100\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <span className=\"font-size-xxl\">{socialMediaReferralIcon[index]}</span>\r\n                    <div className=\"ml-3\">\r\n                      <h4 className=\"font-weight-bold mb-0\">{item.title}</h4>\r\n                      <span className=\"text-muted\">Total: <span className=\"font-weight-bold\">{item.amount}</span></span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <ApexChart \r\n                      options={{...apexSparklineChartDefultOption, ...{colors: [utils.getSignNum(item.percentage, COLORS[1], COLORS[2])]}}} \r\n                      series={item.data} \r\n                      height={25} \r\n                      width={50}\r\n                    />\r\n                    <span className=\"ml-3 font-weight-bold\">{item.percentage}%</span>\r\n                    <span className={`ml-1 ${utils.getSignNum(item.percentage, 'text-success', 'text-danger')}`}>\r\n                      {utils.getSignNum(item.percentage, <ArrowUpOutlined />, <ArrowDownOutlined />)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </List.Item>\r\n              )}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={24} lg={24} xxl={12}>\r\n          <ChartWidget \r\n            series={uniqueVisitorsData.series} \r\n            xAxis={uniqueVisitorsData.categories} \r\n            title=\"Unique Visitors\"\r\n            height={410}\r\n            type=\"bar\"\r\n            direction={direction}\r\n            customOptions={\r\n              {\r\n                colors: [COLORS[1], COLORS[0]]\r\n              }\r\n            }\r\n            extra={\r\n              <Select defaultValue=\"week\" size=\"small\" style={{ width: 120 }} onChange={handleVisitorsChartChange}>\r\n                <Option value=\"day\">Day</Option>\r\n                <Option value=\"week\">Week</Option>\r\n                <Option value=\"month\">Month</Option>\r\n              </Select>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AnalyticDashboard"],"names":["_ref","style","rest","_jsx","AntdCard","marginBottom","titleStyle","position","zIndex","extraStyle","right","top","ChartWidget","title","series","width","height","xAxis","customOptions","card","type","extra","direction","bodyClass","options","JSON","parse","stringify","apexLineChartDefaultOption","apexBarChartDefaultOption","apexAreaChartDefaultOption","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","_extraRef$current","lengend","querySelectorAll","marginRight","concat","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","xaxis","categories","ref","resizeRef","useResizeDetector","onResize","setTimeout","renderChart","children","className","ApexChart","_Fragment","Card","_jsxs","defaultProps","defaultOption","apexPieChartDefaultOption","Chart","props","DonutChartWidget","labels","plotOptions","pie","donut","total","label","show","COLOR_1","COLOR_2","COLOR_4","COLOR_1_LIGHT","COLOR_2_LIGHT","COLORS","COLOR_AXES","COLOR_TEXT","chart","zoom","enabled","toolbar","colors","dataLabels","stroke","curve","lineCap","legend","horizontalAlign","offsetY","itemMargin","vertical","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","grid","lines","yaxis","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","size","showAlways","fontSize","fontFamily","fontWeight","color","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","sparkline","fixed","x","seriesName","marker","getNameInitial","name","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","path","route","p","hasOwnProperty","this","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","percent","R","G","B","RR","toString","length","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","key","toLowerCase","filterArray","list","value","data","filter","item","deleteArrayRow","wildCardSearch","input","searchText","getBreakPoint","screens","breakpoints","push","regionData","pagesViewData","url","amount","sessionColor","sessionData","sessionLabels","conbinedSessionData","jointSessionData","arr","socialMediaReferralData","percentage","uniqueVisitorsDataDay","uniqueVisitorsDataWeek","uniqueVisitorsDataMonth","socialMediaReferralIcon","FacebookFilled","TwitterSquareFilled","YoutubeFilled","LinkedinFilled","DribbbleSquareFilled","Option","Select","rederRegionTopEntrance","Avatar","src","AnalyticDashboard","uniqueVisitorsData","setUniqueVisitorsData","useState","useSelector","state","theme","Row","gutter","Col","xs","sm","md","lg","xxl","RegiondataWidget","content","justify","maxWidth","map","elm","Flex","alignItems","gap","Badge","List","itemLayout","dataSource","renderItem","Item","Tag","NumberFormat","thousandSeparator","displayType","index","utils","ArrowUpOutlined","ArrowDownOutlined","defaultValue","onChange","console","log"],"sourceRoot":""}