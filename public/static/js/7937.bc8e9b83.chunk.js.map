{"version":3,"file":"static/js/7937.bc8e9b83.chunk.js","mappings":"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","sources":["assets/svg/icon.js","components/shared-components/AvatarStatus/index.js","components/util-components/CustomIcon/index.js","layouts/inner-app-layout/index.js","utils/index.js","views/app-views/apps/mail/MailMenu.js","views/app-views/apps/mail/MailLabels.js","views/app-views/apps/mail/MailItem.js","views/app-views/apps/mail/MaiDetail.js","views/app-views/apps/mail/MailCompose.js","views/app-views/apps/mail/MailContent.js","views/app-views/apps/mail/index.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ReplySVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path\r\n      d=\"M537.016,909.264c-7.034,0-14.006-2.372-19.671-6.97L18.508,496.986C11.232,491.055,7,482.161,7,472.781\r\n\t\t\tc0-9.374,4.232-18.267,11.508-24.204L517.345,43.272c9.318-7.551,22.258-9.104,33.064-3.959\r\n\t\t\tc10.871,5.175,17.785,16.135,17.785,28.162v219.277c243.388,16.107,436.483,219.246,436.483,466.625v62.353\r\n\t\t\tc0,12.18-7.097,23.235-18.147,28.314c-11.054,5.119-24.054,3.292-33.311-4.626l-52.55-45.027\r\n\t\t\tc-93.318-79.986-210.359-126.841-332.476-133.66v217.36c0,12.022-6.914,22.986-17.785,28.158\r\n\t\t\tC546.146,908.262,541.58,909.268,537.016,909.264L537.016,909.264z M125.715,472.781L506.65,782.309V614.776\r\n\t\t\tc0-15.697,12.702-28.401,28.399-28.401c134.946,0,265.707,48.367,368.18,136.193l0.972,0.834\r\n\t\t\tc-2.664-201.286-167.231-364.213-369.148-364.213c-15.699,0-28.4-12.704-28.4-28.399V163.258\r\n\t\t\tC506.65,163.258,125.715,472.781,125.715,472.781L125.715,472.781z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const GoogleSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <path\r\n        fill=\"#59C36A\"\r\n        d=\"M827.301,875.968c-84.521,71.388-194.169,116.693-313.528,116.693c-177.609,0-333.52-97.848-418.041-240.62\r\n\t\t\t\tl31.646-145.858l140.255-26.039c32.553,105.078,130.779,182.178,246.141,182.178c55.964,0,107.937-17.703,150.767-49.112\r\n\t\t\t\tl134.777,20.558L827.301,875.968z\"\r\n      />\r\n      <path\r\n        fill=\"#00A66C\"\r\n        d=\"M827.301,875.968l-27.984-142.201l-134.777-20.558c-42.83,31.409-94.803,49.112-150.767,49.112v230.34\r\n\t\t\t\tC633.132,992.661,742.779,947.355,827.301,875.968z\"\r\n      />\r\n      <g id=\"Connected_Home_1_\">\r\n        <g>\r\n          <g>\r\n            <g>\r\n              <path\r\n                fill=\"#FFDA2D\"\r\n                d=\"M256.781,505.331c0,26.267,3.998,51.396,10.851,74.813l-171.9,171.897\r\n\t\t\t\t\t\t\t\tc-42.83-71.957-69.29-156.48-69.29-246.71c0-90.233,26.46-174.754,69.29-246.711l137.965,23.743l33.936,148.154\r\n\t\t\t\t\t\t\t\tC260.779,453.932,256.781,479.06,256.781,505.331L256.781,505.331z\"\r\n              />\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </g>\r\n      <path\r\n        fill=\"#4086F4\"\r\n        d=\"M1001.103,505.331c0,148.48-68.719,281.547-173.802,370.637L664.539,713.209\r\n\t\t\t\tc33.121-23.988,61.107-55.971,79.384-93.66h-230.15c-15.993,0-28.556-12.567-28.556-28.554V419.666\r\n\t\t\t\tc0-15.99,12.563-28.554,28.556-28.554h450.78c13.707,0,25.698,9.708,27.983,23.412\r\n\t\t\t\tC998.247,444.225,1001.103,475.063,1001.103,505.331L1001.103,505.331z\"\r\n      />\r\n      <path\r\n        fill=\"#4175DF\"\r\n        d=\"M743.924,619.549c-18.275,37.689-46.264,69.672-79.382,93.66l162.759,162.759\r\n\t\t\t\tc105.083-89.09,173.802-222.153,173.802-370.637c0-30.269-2.855-61.106-8.567-90.807c-2.284-13.704-14.278-23.412-27.984-23.412\r\n\t\t\t\tH513.772v228.437H743.924z\"\r\n      />\r\n      <path\r\n        fill=\"#FF641A\"\r\n        d=\"M835.297,154.107c0.571,7.996-2.855,15.422-7.996,21.131L705.086,296.881\r\n\t\t\t\tc-9.704,10.278-25.694,11.421-37.118,2.855c-45.119-33.693-98.231-51.396-154.195-51.396\r\n\t\t\t\tc-115.361,0-213.588,77.095-246.141,182.178L95.731,258.62C180.253,115.848,336.163,18,513.772,18\r\n\t\t\t\tc113.647,0,224.439,41.88,311.244,114.978C831.298,138.119,834.723,146.112,835.297,154.107L835.297,154.107z\"\r\n      />\r\n      <path\r\n        fill=\"#F03800\"\r\n        d=\"M667.966,299.736c11.422,8.567,27.411,7.423,37.119-2.855l122.214-121.643\r\n\t\t\t\tc5.143-5.709,8.569-13.133,7.996-21.131c-0.575-7.997-3.999-15.988-10.279-21.13C738.212,59.88,627.42,18,513.772,18v230.34\r\n\t\t\t\tC569.736,248.34,622.849,266.043,667.966,299.736z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport const FacebookSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <path\r\n        fill=\"#4A7AFF\"\r\n        d=\"M1015.363,506.525c0,279.749-226.775,506.524-506.525,506.524c-279.749,0-506.524-226.775-506.524-506.524\r\n\tC2.313,226.775,229.089,0,508.838,0C788.588,0,1015.363,226.775,1015.363,506.525z\"\r\n      />\r\n      <path\r\n        fill=\"#FFFFFF\"\r\n        d=\"M663.688,149.015v114.697c0,0-131.686-19.113-131.686,65.843v84.957h118.941L636.08,544.072H532.002v337.709\r\n\tH400.316V544.072l-112.572-2.126V414.512H398.19V316.81c0,0-7.288-145.343,135.938-172.038\r\n\tC593.602,133.68,663.688,149.015,663.688,149.015z\"\r\n      />\r\n      <path\r\n        fill=\"#DCE1EB\"\r\n        d=\"M663.688,263.712V149.015c0,0-70.086-15.335-129.56-4.243c-9.291,1.73-17.932,3.973-25.993,6.623v730.387\r\n\th23.867V544.072h104.07l14.871-129.561H532.002c0,0,0,0,0-84.957C532.002,244.599,663.688,263.712,663.688,263.712z\"\r\n      />\r\n    </g>\r\n  </svg>\r\n);\r\n\r\nexport const TwitterSVG = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <path fill=\"#03A9F4\" d=\"M1006.701,163.276c-6.71-7.344-17.513-9.249-26.334-4.649c-9.059,4.107-18.431,7.508-28.042,10.136\r\n      c14.983-19.171,26.285-40.938,33.356-64.208c3.113-11.713-3.859-23.729-15.573-26.834c-6.251-1.668-12.92-0.484-18.218,3.219\r\n      c-33.365,18.063-68.824,31.936-105.59,41.3c-75.666-71.428-190.939-80.332-276.685-21.372\r\n      c-66.047,44.667-102.419,121.845-94.796,201.207c-143.168-12.197-274.902-83.141-363.884-195.983\r\n      c-4.574-5.527-11.491-8.575-18.653-8.206c-7.262,0.436-13.833,4.443-17.545,10.703c-30.202,49.365-38.951,108.916-24.231,164.878\r\n      c7.548,28.757,20.485,55.813,38.136,79.74c-7.942-3.894-15.434-8.682-22.292-14.268c-9.413-7.632-23.229-6.193-30.86,3.22\r\n      c-3.17,3.909-4.904,8.788-4.912,13.815c1.314,81.186,45.891,155.489,116.917,194.842c-9.586-1.175-19.04-3.204-28.264-6.054\r\n      c-11.607-3.491-23.846,3.088-27.338,14.687c-1.519,5.06-1.166,10.505,1.004,15.326c30.826,69.055,92.447,119.488,166.24,136.039\r\n      c-70.303,39.665-151.25,56.33-231.5,47.657c-10.399-1.323-20.255,5.002-23.385,15.015c-3.228,9.931,0.993,20.765,10.095,25.891\r\n      c98.254,58.384,210.029,90.139,324.3,92.16c109.632-0.403,216.707-33.152,307.808-94.132\r\n      C820.37,681.983,928.769,474.763,913.672,289.359c37.184-27.533,69.439-61.153,95.403-99.446\r\n      C1014.406,181.519,1013.437,170.586,1006.701,163.276z\"/>\r\n  </svg>\r\n)\r\n\r\nexport const ImageSvg = () => (\r\n  <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\r\n    <g>\r\n      <g>\r\n        <path fill=\"#E5E1E5\" d=\"M163.033,1011.756L2.746,191.353c-4.863-24.879,11.365-48.991,36.245-53.852l124.042-24.234l194.642-42.82\r\n          l279.663,941.308H163.033V1011.756z\"/>\r\n      </g>\r\n      <path fill=\"#99E6FC\" d=\"M163.033,680.979L68.355,196.393l94.678-18.501l143.802-23.615l62.994,584.599L163.033,680.979z\"/>\r\n      <g id=\"XMLID_159_\">\r\n        <g>\r\n          <path fill=\"#F9F7F8\" d=\"M1014.357,64.9v957.461c0,25.351-20.549,45.899-45.899,45.899H208.93\r\n            c-25.351,0-45.901-20.549-45.901-45.899V64.9c0-25.35,20.551-45.9,45.901-45.9h759.528C993.809,19,1014.357,39.551,1014.357,64.9\r\n            z\"/>\r\n        </g>\r\n        <path fill=\"#EFEDEF\" d=\"M574.473,971.206c-90.848,0-164.495-73.646-164.495-164.493V19H208.93\r\n          c-25.351,0-45.901,20.551-45.901,45.9v957.461c0,25.351,20.551,45.899,45.901,45.899h759.528\r\n          c25.351,0,45.899-20.549,45.899-45.899v-51.155H574.473z\"/>\r\n        <path fill=\"#FEC165\" d=\"M950.933,737.554V234.861c0-7.122-5.774-12.896-12.897-12.896H239.354c-7.12,0-12.896,5.774-12.896,12.896\r\n          v502.692H950.933z\"/>\r\n        <path fill=\"#FDB441\" d=\"M409.978,221.965H239.354c-7.12,0-12.896,5.774-12.896,12.896v502.692h183.52V221.965z\"/>\r\n        <circle fill=\"#FEE903\" cx=\"588.693\" cy=\"600.309\" r=\"246.948\"/>\r\n        <path fill=\"#F4D902\" d=\"M409.978,770.729V429.889c-42.274,44.316-68.229,104.339-68.229,170.419\r\n          C341.748,666.391,367.703,726.41,409.978,770.729z\"/>\r\n        <g>\r\n          <path fill=\"#99E6FC\" d=\"M902.813,668.316c-57.591-25.393-122.604-28.267-182.203-8.034l-51.163,17.336\r\n            c-52.369,17.759-109.135,17.759-161.505,0l-51.163-17.336c-59.602-20.232-124.611-17.358-182.182,8.034l-48.142,21.226v105.269\r\n            l80.12,33.354h599.658l44.699-33.354V689.542L902.813,668.316z\"/>\r\n          <path fill=\"#62DBFB\" d=\"M409.978,828.165V649.264c-45.72-6.239-92.605,0.184-135.379,19.053l-48.141,21.226v105.269\r\n            l80.119,33.354H409.978z\"/>\r\n          <path fill=\"#62DBFB\" d=\"M950.933,794.811v61.709c0,5.452-4.424,9.878-9.879,9.878H236.332c-5.453,0-9.877-4.426-9.877-9.878\r\n            v-61.709l48.142-21.229c57.57-25.39,122.58-28.268,182.182-8.055l51.163,17.358c52.37,17.759,109.136,17.759,161.505,0\r\n            l51.163-17.358c59.6-20.213,124.612-17.335,182.203,8.055L950.933,794.811z\"/>\r\n          <path fill=\"#01D0FB\" d=\"M236.332,866.397h184.86c-7.214-18.51-11.215-38.625-11.215-59.685v-52.188\r\n            c-45.72-6.231-92.605,0.192-135.379,19.061l-48.141,21.226v61.71c-0.003,5.451,4.421,9.875,9.874,9.875V866.397z\"/>\r\n        </g>\r\n      </g>\r\n    </g>\r\n  </svg>\r\n)","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst CustomIcon = React.forwardRef((props, _) => <Icon component={props.svg} className={props.className}/>)\r\n\r\nexport default CustomIcon\r\n","/** @jsxImportSource @emotion/react */\r\nimport { useState } from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid, Drawer, Card } from \"antd\";\r\nimport utils from 'utils'\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from '@emotion/styled';\r\nimport { css } from '@emotion/react';\r\nimport { TEMPLATE, DARK_MODE, BORDER } from 'constants/ThemeConstant';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst MainContent = styled.div(({hasPageHeader, gutter}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tminHeight: `calc(100vh - ${TEMPLATE.CONTENT_HEIGHT_OFFSET}px - ${TEMPLATE.LAYOUT_CONTENT_GUTTER}px * 2  - 2px);`,\r\n\t\twidth: '100%',\r\n\t\tpadding: gutter ? 24: 0\r\n\t}\r\n\r\n\tif (hasPageHeader) {\r\n\t\tbaseStyle.minHeight = '75vh'\r\n\t}\r\n\r\n\treturn baseStyle\r\n})\r\n\r\n\r\nconst SideContent = props => {\r\n\tconst { sideContent, sideContentWidth = 250, border } = props\r\n\r\n\tconst currentTheme = useSelector(state => state.theme.currentTheme)\r\n\r\n\treturn (\r\n\t\t<div style={{width: `${sideContentWidth}px`, borderInlineEnd: `1px solid ${currentTheme === 'dark' ? DARK_MODE.BORDER_BASE_COLOR : BORDER.BASE_COLOR }`}}>\r\n\t\t\t{sideContent}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst SideContentMobile = props => {\r\n\tconst { sideContent, visible, onSideContentClose } = props\r\n\treturn (\r\n\t\t<Drawer\r\n\t\t\twidth={320}\r\n\t\t\tplacement=\"left\"\r\n\t\t\tclosable={false}\r\n\t\t\tonClose={onSideContentClose}\r\n\t\t\topen={visible}\r\n\t\t\tbodyStyle={{paddingLeft: 0, paddingRight: 0}}\r\n\t\t>\r\n\t\t\t<div className=\"h-100\">\r\n\t\t\t\t{sideContent}\r\n\t\t\t</div>\r\n\t\t</Drawer>\r\n\t)\r\n}\r\n\r\nexport const InnerAppLayout = props => {\r\n\tconst { mainContent, pageHeader, sideContentGutter = true } = props\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst [visible, setVisible] = useState(false);\r\n\r\n\tconst close = (e) => {\r\n\t\tsetVisible(false)\r\n\t} \r\n\r\n\tconst openSideContentMobile = () => {\r\n\t\tsetVisible(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card className=\"mb-0\" css={css`\r\n\t\t\t>.ant-card-body {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tpadding: 0px;\r\n\t\t\t}\r\n\t\t`}>\r\n\t\t\t{isMobile ? \r\n\t\t\t\t<SideContentMobile \r\n\t\t\t\t\tvisible={visible} \r\n\t\t\t\t\tonSideContentClose={close}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/> \r\n\t\t\t\t: \r\n\t\t\t\t<SideContent {...props} />\r\n\t\t\t}\r\n\t\t\t<MainContent hasPageHeader={pageHeader} gutter={sideContentGutter}>\r\n\t\t\t\t{isMobile ? \r\n\t\t\t\t\t<div className={`font-size-lg mb-3 ${!sideContentGutter ? 'pt-3 px-3' : ''}`}>\r\n\t\t\t\t\t\t<MenuOutlined onClick={() => openSideContentMobile()}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t:\r\n\t\t\t\t\tnull\r\n\t\t\t\t}\r\n\t\t\t\t{mainContent}\r\n\t\t\t</MainContent>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nInnerAppLayout.propTypes = {\r\n\tsideContent: PropTypes.node,\r\n\tmainContent: PropTypes.node,\r\n\tpageHeader: PropTypes.bool,\r\n\tsideContentWidth: PropTypes.number,\r\n\tborder: PropTypes.bool,\r\n\tsideContentGutter: PropTypes.bool\r\n};\r\n\r\nexport default InnerAppLayout\r\n","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import React from 'react'\r\nimport { Menu, Button, Badge } from 'antd';\r\nimport { \r\n\tInboxOutlined, \r\n\tFileTextOutlined, \r\n\tMailOutlined, \r\n\tStarOutlined, \r\n\tDeleteOutlined, \r\n\tEditOutlined \r\n} from '@ant-design/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nconst MenuItem = ({prefix, path, label, url}) => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{prefix}\r\n\t\t\t<span>{label}</span>\r\n\t\t\t<Link to={`${url}${path}`} />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport const MailMenu = (props) => {\r\n\r\n\tconst { url } = props\r\n\r\n\tconst location = useLocation()\r\n\r\n\tconst locationPath = location.pathname.split('/')\r\n\r\n\tconst currentpath = locationPath[locationPath.length - 1]\r\n\r\n\treturn (\r\n\t\t<div className=\"w-100\">\r\n\t\t\t<div className=\"p-3\">\r\n\t\t\t\t<Link to={`${url}compose`}>\r\n\t\t\t\t\t<Button type=\"primary\" block>\r\n\t\t\t\t\t\t<EditOutlined />\r\n\t\t\t\t\t\t<span>Compose</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t\t\t<Menu\r\n\t\t\t\tmode=\"inline\"\r\n\t\t\t\tselectedKeys={[currentpath]}\r\n\t\t\t\tstyle={{ borderInlineEnd: 0 }}\r\n\t\t\t\titems={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'inbox',\r\n\t\t\t\t\t\tlabel: <MenuItem label=\"Inbox\" prefix={<InboxOutlined />} path=\"inbox\" url={url} />\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'sent',\r\n\t\t\t\t\t\tlabel: <MenuItem label=\"Sent\" prefix={<MailOutlined />} path=\"sent\" url={url} />\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'draft',\r\n\t\t\t\t\t\tlabel: <MenuItem label=\"Draft\" prefix={<FileTextOutlined />} path=\"draft\" url={url} />\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'starred',\r\n\t\t\t\t\t\tlabel: <MenuItem label=\"Starred\" prefix={<StarOutlined />} path=\"starred\" url={url} />\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'deleted',\r\n\t\t\t\t\t\tlabel: <MenuItem label=\"Deleted\" prefix={<DeleteOutlined />} path=\"deleted\" url={url} />\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tkey: 'Labels',\r\n\t\t\t\t\t\tlabel: 'Labels',\r\n\t\t\t\t\t\ttype: 'group',\r\n\t\t\t\t\t\tchildren: [\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkey: 'works',\r\n\t\t\t\t\t\t\t\tlabel: <MenuItem label=\"Works\" prefix={<Badge className='mr-2' color=\"blue\" />} path=\"works\" url={url} />\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkey: 'private',\r\n\t\t\t\t\t\t\t\tlabel: <MenuItem label=\"Private\" prefix={<Badge className='mr-2' color=\"cyan\" />} path=\"private\" url={url} />\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tkey: 'important',\r\n\t\t\t\t\t\t\t\tlabel: <MenuItem label=\"Important\" prefix={<Badge className='mr-2' color=\"red\" />} path=\"important\" url={url} />\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}\r\n\t\t\t\t]}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MailMenu\r\n","import React from 'react'\r\n\r\nimport {\r\n\tFileWordOutlined,\r\n\tFileExcelOutlined,\r\n\tFileImageOutlined,\r\n\tFilePdfOutlined\r\n} from '@ant-design/icons';\r\n\r\nexport const labels = ['works', 'private', 'important']\r\n\r\nexport const getLabelColor = label => {\r\n\tswitch (label) {\r\n\t\tcase 'works':\r\n\t\t\treturn 'blue';\r\n\t\tcase 'private':\r\n\t\t\treturn 'cyan';\r\n\t\tcase 'important':\r\n\t\t\treturn 'red';\r\n\t\tdefault:\r\n\t\t\treturn '#ececec';\r\n\t}\r\n}\r\n\r\nexport const getFileType = fileType => {\r\n\tswitch (fileType) {\r\n\t\tcase 'doc':\r\n\t\t\treturn <FileWordOutlined className=\"text-primary\" />\r\n\t\tcase 'xls':\r\n\t\t\treturn <FileExcelOutlined className=\"text-success\"/>;\r\n\t\tcase 'pdf':\r\n\t\t\treturn <FilePdfOutlined className=\"text-danger\"/>;\r\n\t\tcase 'jpg':\r\n\t\t\treturn <FileImageOutlined className=\"text-warning\"/>;\r\n\t\tcase 'png':\r\n\t\t\treturn <FileImageOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { Table, Avatar, Badge, Tooltip, Dropdown, Menu, Input } from 'antd';\r\nimport { StarOutlined, StarFilled, DeleteOutlined, TagOutlined } from '@ant-design/icons';\r\nimport MailData from 'assets/data/mail.data.json';\r\nimport { labels, getLabelColor } from './MailLabels';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\n\r\nconst MailItem = () => {\r\n\r\n\tconst params = useParams();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst [mails, setMails] = useState([])\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n\tconst onSelectChange = keys => {\r\n\t\tsetSelectedRowKeys(keys)\r\n\t};\r\n\r\n\tconst onStarTicked = elm => {\r\n\t\tconst { id, starred } = elm;\r\n\t\tsetMails(prevMails => prevMails.map( item => {\r\n\t\t\tif(item.id === id) {\r\n\t\t\t\titem.starred = !starred\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t\treturn item\r\n\t\t}))\r\n\t}\r\n\r\n\tconst formatBody = body => {\r\n\t\treturn body.replace(/<(?:.|\\n)*?>/gm, ' ');\r\n\t}\r\n\r\n\tconst loadMail = () => {\r\n\t\tconst data = getCurrentCategory();\r\n\r\n\t\tsetMails(data);\r\n\t\tsetSelectedRowKeys([]);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tloadMail();\r\n\t}, [params])\r\n\r\n\tconst massDeleted = selectedKey => {\r\n\t\tlet data = mails\r\n\t\tselectedKey.forEach(num => {\r\n\t\t\tdata = data.filter(elm => elm.id !== num)\r\n\t\t});\r\n\t\tsetMails(data);\r\n\t\tsetSelectedRowKeys([]);\r\n\t}\r\n\r\n\tconst massStar = selectedKey => {\r\n\t\tlet data = mails\r\n\t\tselectedKey.forEach(num => {\r\n\t\t\tdata = data.map(elm => {\r\n\t\t\t\tif(elm.id === num) {\r\n\t\t\t\t\telm.starred = true\r\n\t\t\t\t\treturn elm\r\n\t\t\t\t} else return elm\r\n\t\t\t})\r\n\t\t});\r\n\t\tsetMails(data);\r\n\t\tsetSelectedRowKeys([]);\r\n\t}\r\n\r\n\tconst massCategorize = (label, selectedKey) => {\r\n\t\tlet data = mails\r\n\t\tselectedKey.forEach(num => {\r\n\t\t\tdata = data.map(elm => {\r\n\t\t\t\tif(elm.id === num) {\r\n\t\t\t\t\telm.label = label\r\n\t\t\t\t\treturn elm\r\n\t\t\t\t} else return elm\r\n\t\t\t})\r\n\t\t});\r\n\t\tsetMails(data);\r\n\t\tsetSelectedRowKeys([]);\r\n\t}\r\n\r\n\tconst onSelectEmail = elm => {\r\n\t\treturn {\r\n\t\t\tonClick: e => {\r\n\t\t\t\te.preventDefault()\r\n\t\t\t\tnavigate(`/app/apps/mail/${elm.id}`)\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tconst search = e => {\r\n\t\tlet query = e.target.value;\r\n\t\tlet data = []\r\n\t\tdata = getCurrentCategory().filter(item => {\r\n\t\t\treturn query === ''? item : item.name.toLowerCase().includes(query)\r\n\t\t});\r\n\t\tsetMails(data);\r\n\t}\r\n\r\n\r\n\tconst getCurrentCategory = () => {\r\n\t\tconst { category } = params;\r\n\t\tif (labels.includes(category)) {\r\n\t\t\treturn MailData.inbox.filter(elm => elm.label === category);\r\n\t\t}\r\n\t\tswitch (category) {\r\n\t\t\tcase 'inbox':\r\n\t\t\t\treturn MailData.inbox\r\n\t\t\tcase 'sent':\r\n\t\t\t\treturn MailData.sent\r\n\t\t\tcase 'draft':\r\n\t\t\t\treturn MailData.draft\r\n\t\t\tcase 'starred':\r\n\t\t\t\treturn  MailData.inbox.filter( elm => elm.starred )\r\n\t\t\tcase 'deleted':\r\n\t\t\t\treturn  MailData.deleted\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tconst rowSelection = {\r\n\t\tselectedRowKeys,\r\n\t\tonChange: onSelectChange,\r\n\t};\r\n\r\n\tconst locale = {\r\n\t\temptyText: (\r\n\t\t\t<div className=\"text-center my-5\">\r\n\t\t\t\t<img src=\"/img/others/img-10.png\" alt=\"Add credit card\"/>\r\n\t\t\t\t<h3 className=\"mt-3 font-weight-light\">There is no mail!</h3>\r\n\t\t\t</div>\r\n\t\t)\r\n\t};\r\n\t\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: () => (\r\n\t\t\t\t<div className=\"mail-list-action\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\thasSelected? \r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Dropdown  overlay={\r\n\t\t\t\t\t\t\t\t\t<Menu>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tlabels.map( elm => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Menu.Item \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`key-${elm}`} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {massCategorize(elm, selectedRowKeys)}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge color={getLabelColor(elm)}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"text-capitalize\">{elm}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</Menu>}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span className=\"mail-list-action-icon ml-0\" onClick={e => e.preventDefault()}>\r\n\t\t\t\t\t\t\t\t\t\t<TagOutlined />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</Dropdown>\r\n\t\t\t\t\t\t\t\t<span className=\"mail-list-action-icon\" onClick={() => {massDeleted(selectedRowKeys)}}>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t\t\t\t\t<DeleteOutlined />\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t<span className=\"mail-list-action-icon\" onClick={() => {massStar(selectedRowKeys)}}>\r\n\t\t\t\t\t\t\t\t\t<Tooltip title=\"Star\">\r\n\t\t\t\t\t\t\t\t\t\t<StarOutlined />\r\n\t\t\t\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Input size=\"small\" placeholder=\"Search\" onChange={e => {search(e)}}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div> \r\n\t\t\t),\r\n\t\t\tcolSpan: 4,\r\n\t\t\tdataIndex: 'name',\r\n\t\t\tclassName: 'mail-list-sender',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tonClick={(e) => {\r\n\t\t\t\t\t\t\te.stopPropagation()\r\n\t\t\t\t\t\t\tonStarTicked(elm)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tclassName={`mail-list-star font-size-md ${elm.starred? 'checked' : 'uncheck'}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{elm.starred? <StarFilled /> : <StarOutlined />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t<Avatar src={elm.avatar} size={30}/>\r\n\t\t\t\t\t\t<h4 className=\"mb-0 ml-2\">{elm.name}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tcolSpan: 0,\r\n\t\t\tclassName: 'mail-list-content',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\" mail-list-content-msg\">\r\n\t\t\t\t\t<Badge color={getLabelColor(elm.label)}/>\r\n\t\t\t\t\t<span className=\"font-weight-semibold text-dark ml-1\">{elm.title}</span>\r\n\t\t\t\t\t<span className=\"mx-2\"> - </span>\r\n\t\t\t\t\t<span className=\"p mb-0\">{formatBody(elm.content)}</span>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tcolSpan: 0,\r\n\t\t\tclassName: 'mail-list-date',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div>{elm.date}</div>\r\n\t\t\t)\r\n\t\t},\r\n\t];\r\n\r\n\tconst hasSelected = selectedRowKeys.length > 0;\r\n\r\n\treturn (\r\n\t\t<div className=\"mail-list\">\r\n\t\t\t<Table \r\n\t\t\t\trowSelection={rowSelection} \r\n\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\tdataSource={mails} \r\n\t\t\t\tlocale={locale}\r\n\t\t\t\tonRow={(elm) => {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tonClick: e => {\r\n\t\t\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\t\t\tnavigate(`/app/apps/mail/${params.category}/${elm.id}`)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\t\t\t}}\r\n\t\t\t\trowKey='id'\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MailItem\r\n","import React, { useState, useEffect } from 'react'\r\nimport MailData from 'assets/data/mail.data.json';\r\nimport { ReplySVG } from 'assets/svg/icon';\r\nimport { labels, getFileType } from './MailLabels';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport { Tooltip } from 'antd';\r\nimport { \r\n\tLeftCircleOutlined, \r\n\tStarOutlined, \r\n\tDeleteOutlined, \r\n\tStarFilled, \r\n\tDownloadOutlined \r\n} from '@ant-design/icons';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport CustomIcon from 'components/util-components/CustomIcon'\r\n\r\nconst MaiDetail = () => {\r\n\r\n\tconst [ detail, setDetail ] = useState({});\r\n\tconst [ starred, setStarred ] = useState(false);\r\n\tconst [ attachment, setAttachment ] = useState([]);\r\n\r\n\tconst params = useParams();\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst tick = () => {\r\n\t\tsetStarred(!starred);\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst { category, id } = params\r\n\t\tconst currentId = parseInt(id)\r\n\t\tlet data = []\r\n\t\tif(labels.includes(category)) {\r\n\t\t\tdata = MailData.inbox.filter(elm => elm.id === currentId)\r\n\t\t} else {\r\n\t\t\tdata = MailData[category].filter(elm => elm.id === currentId)\r\n\t\t}\r\n\t\tconst res = data[0]\r\n\t\tsetDetail(res)\r\n\t\tsetStarred(res.starred)\r\n\t\tsetAttachment(res.attachment)\r\n\t}, [])\r\n\t\r\n\r\n\tconst back = () => {\r\n\t\tnavigate(-1);\r\n\t}\r\n\r\n\tconst { name, avatar, title, date, to, content } = detail\r\n\r\n\treturn (\r\n\t\t<div className=\"mail-detail\">\r\n\t\t\t<div className=\"d-lg-flex align-items-center justify-content-between\">\r\n\t\t\t\t<div className=\"d-flex align-items-center mb-3\">\r\n\t\t\t\t\t<div className=\"font-size-md mr-3\" onClick={()=> {back()}}>\r\n\t\t\t\t\t\t<LeftCircleOutlined className=\"mail-detail-action-icon font-size-md ml-0\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<AvatarStatus src={avatar} name={name} subTitle={`To: ${to}`}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mail-detail-action mb-3\">\r\n\t\t\t\t\t<span className=\"mr-2 font-size-md\">{date}</span>\r\n\t\t\t\t\t<Tooltip title=\"Reply\">\r\n\t\t\t\t\t\t<CustomIcon className=\"mail-detail-action-icon\" svg={ReplySVG} />\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t<Tooltip title=\"Star\" onClick={()=>{tick()}}>\r\n\t\t\t\t\t\t{starred? <StarFilled className=\"mail-detail-action-icon star checked\" /> : <StarOutlined className=\"mail-detail-action-icon star\" />}\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t{attachment.length > 0 ? <Tooltip title=\"Download Attachment\"><DownloadOutlined className=\"mail-detail-action-icon\"/></Tooltip> : null}\r\n\t\t\t\t\t<Tooltip title=\"Delete\">\r\n\t\t\t\t\t\t<DeleteOutlined className=\"mail-detail-action-icon\"/>\r\n\t\t\t\t\t</Tooltip>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mail-detail-content\">\r\n\t\t\t\t<h3 className=\"mb-4\">{title}</h3>\r\n\t\t\t\t<div dangerouslySetInnerHTML={{ __html: content }} />\r\n\t\t\t\t<div className=\"mail-detail-attactment\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tattachment.map( (elm, i) => (\r\n\t\t\t\t\t\t\t<div className=\"mail-detail-attactment-item\" key={`attachment-file-${i}`}>\r\n\t\t\t\t\t\t\t\t<span>{getFileType(elm.type)}</span>\r\n\t\t\t\t\t\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t\t\t\t\t\t<div>{elm.file}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"text-muted font-size-sm\">{elm.size}</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MaiDetail\r\n","import React from 'react'\r\nimport { Form, Input, Button, message } from 'antd';\r\nimport ReactQuill from 'react-quill';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst MailCompose = () => {\r\n\r\n\tconst navigate = useNavigate()\r\n\r\n\tconst modules = {\r\n\t\ttoolbar: [\r\n\t\t\t[{ header: [1, 2, false] }],\r\n\t\t\t['bold', 'italic', 'underline'],\r\n\t\t\t['image', 'code-block']\r\n\t\t],\r\n\t}\r\n\r\n\tconst back = () => {\r\n\t\tnavigate(-1);\r\n\t}\r\n\r\n\tconst onFinish = () => {\r\n\t\tmessage.success('Email has been sent');\r\n\t\tnavigate('/app/apps/mail/inbox');\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"mail-compose\">\r\n\t\t\t<h4 className=\"mb-4\">New Message</h4>\r\n\t\t\t<Form  name=\"nest-messages\" onFinish={onFinish} >\r\n\t\t\t\t<Form.Item name={['mail', 'to']}>\r\n\t\t\t\t\t<Input placeholder=\"To:\"/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name={['mail', 'cc']} >\r\n\t\t\t\t\t<Input placeholder=\"Cc:\"/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name={['mail', 'subject']} >\r\n\t\t\t\t\t<Input placeholder=\"Subject:\"/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item name={['mail', 'content']}>\r\n\t\t\t\t\t<ReactQuill theme=\"snow\" modules={modules}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<div className=\"mt-5 text-right\">\r\n\t\t\t\t\t\t<Button type=\"link\" className=\"mr-2\">\r\n\t\t\t\t\t\t\tSave Darft\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button className=\"mr-2\" onClick={back}>\r\n\t\t\t\t\t\t\tDiscard\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MailCompose\r\n","import React from 'react'\r\nimport { Route, Routes, } from 'react-router-dom';\r\nimport MailItem from './MailItem';\r\nimport MailDetail from './MaiDetail';\r\nimport MailCompose from './MailCompose';\r\n\r\nexport const MailContent = () => {\r\n\treturn (\r\n\t\t<Routes>\r\n\t\t\t<Route path=\"compose\" element={<MailCompose />} />\r\n\t\t\t<Route path=\":category/:id\" element={<MailDetail />} />\r\n\t\t\t<Route path=\":category\" element={<MailItem />} />\r\n\t\t</Routes>\r\n\t)\r\n}\r\n\r\nexport default MailContent\r\n","import React, { Component } from 'react'\r\nimport InnerAppLayout from 'layouts/inner-app-layout';\r\nimport MailMenu from './MailMenu';\r\nimport MailContent from './MailContent';\r\n\r\nexport class Mail extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"mail\">\r\n\t\t\t\t<InnerAppLayout \r\n\t\t\t\t\tsideContent={<MailMenu url=\"/app/apps/mail/\" {...this.props}/>}\r\n\t\t\t\t\tmainContent={<MailContent {...this.props}/>}\r\n\t\t\t\t\tborder\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Mail\r\n"],"names":["ReplySVG","_jsx","viewBox","width","height","fill","children","d","GoogleSVG","_jsxs","id","FacebookSVG","ImageSvg","cx","cy","r","renderAvatar","props","Avatar","className","concat","type","text","name","suffix","subTitle","src","icon","size","shape","gap","onNameClick","onClick","React","_","Icon","component","svg","useBreakpoint","Grid","MainContent","styled","div","_ref","hasPageHeader","gutter","baseStyle","minHeight","TEMPLATE","CONTENT_HEIGHT_OFFSET","LAYOUT_CONTENT_GUTTER","padding","SideContent","sideContent","sideContentWidth","border","currentTheme","useSelector","state","theme","style","borderInlineEnd","DARK_MODE","BORDER_BASE_COLOR","BORDER","BASE_COLOR","SideContentMobile","visible","onSideContentClose","Drawer","placement","closable","onClose","open","bodyStyle","paddingLeft","paddingRight","mainContent","pageHeader","sideContentGutter","isMobile","utils","getBreakPoint","includes","setVisible","useState","Card","css","_templateObject","_taggedTemplateLiteral","e","MenuOutlined","getNameInitial","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","path","route","p","hasOwnProperty","this","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","color","percent","R","G","B","RR","toString","length","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","g","b","a","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","key","toLowerCase","filterArray","list","value","data","filter","item","deleteArrayRow","wildCardSearch","input","searchText","screens","breakpoints","push","MenuItem","prefix","label","url","_Fragment","Link","to","locationPath","useLocation","pathname","currentpath","Button","block","EditOutlined","Menu","mode","selectedKeys","items","InboxOutlined","MailOutlined","FileTextOutlined","StarOutlined","DeleteOutlined","Badge","labels","getLabelColor","getFileType","fileType","FileWordOutlined","FileExcelOutlined","FilePdfOutlined","FileImageOutlined","MailItem","params","useParams","navigate","useNavigate","mails","setMails","selectedRowKeys","setSelectedRowKeys","useEffect","loadMail","getCurrentCategory","category","MailData","elm","starred","rowSelection","onChange","keys","locale","emptyText","alt","tableColumns","title","hasSelected","Dropdown","overlay","map","Item","massCategorize","selectedKey","num","preventDefault","TagOutlined","massDeleted","Tooltip","massStar","Input","placeholder","query","target","search","colSpan","dataIndex","render","stopPropagation","prevMails","onStarTicked","StarFilled","avatar","body","content","date","Table","columns","dataSource","onRow","rowKey","MaiDetail","detail","setDetail","setStarred","attachment","setAttachment","currentId","res","LeftCircleOutlined","AvatarStatus","CustomIcon","DownloadOutlined","dangerouslySetInnerHTML","__html","file","MailCompose","Form","onFinish","message","success","ReactQuill","modules","toolbar","header","back","htmlType","MailContent","Routes","Route","element","MailDetail","Mail","Component","InnerAppLayout","MailMenu"],"sourceRoot":""}