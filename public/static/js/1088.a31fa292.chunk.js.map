{"version":3,"file":"static/js/1088.a31fa292.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/Card/index.js","components/shared-components/ChartWidget/index.js","components/shared-components/CustomStatistic/index.js","components/shared-components/DataDisplayWidget/index.js","components/shared-components/DonutChartWidget/index.js","components/shared-components/Flex/index.js","constants/ChartConstant.js","constants/DateConstant.js","utils/index.js","views/app-views/dashboards/sales/SalesDashboardData.js","views/app-views/dashboards/sales/index.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import { Card as AntdCard } from 'antd';\r\n\r\n\r\nconst Card = ({style, ...rest}) => {\r\n    return (\r\n        <AntdCard style={{ marginBottom: 20 }} {...rest} />\r\n    )\r\n}\r\n\r\nexport default Card","import React, { useRef, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from 'components/shared-components/Card';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { \r\n\tapexLineChartDefaultOption, \r\n\tapexBarChartDefaultOption,\r\n\tapexAreaChartDefaultOption\r\n} from 'constants/ChartConstant';\r\nimport { useResizeDetector } from 'react-resize-detector';\r\nimport { DIR_RTL } from 'constants/ThemeConstant';\r\n\r\nconst titleStyle = {\r\n\tposition: 'absolute',\r\n\tzIndex: '1'\r\n}\r\n\r\nconst extraStyle ={\r\n\tposition: 'absolute',\r\n\tzIndex: '1',\r\n\tright: '0',\r\n\ttop: '-2px'\r\n}\r\n\r\nconst getChartTypeDefaultOption = type => {\r\n\tswitch (type) {\r\n\t\tcase 'line':\r\n\t\t\treturn apexLineChartDefaultOption\r\n\t\tcase 'bar':\r\n\t\t\treturn apexBarChartDefaultOption\r\n\t\tcase 'area':\r\n\t\t\treturn apexAreaChartDefaultOption\r\n\t\tdefault:\r\n\t\t\treturn apexLineChartDefaultOption;\r\n\t}\r\n}\r\n\r\nconst ChartWidget = ({title, series, width, height, xAxis, customOptions, card, type, extra, direction, bodyClass}) =>  {\r\n\tlet options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)))\r\n\tconst isMobile = window.innerWidth < 768 \r\n\tconst setLegendOffset = () => {\r\n\t\tif(chartRef.current) {\r\n\t\t\tconst lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0]\r\n\t\t\tlengend.style.marginRight = `${isMobile ? 0 : extraRef.current?.offsetWidth}px`\r\n\t\t\tif(direction === DIR_RTL) {\r\n\t\t\t\tlengend.style.right = 'auto'\r\n\t\t\t\tlengend.style.left = '0'\r\n\t\t\t}\r\n\t\t\tif (isMobile) {\r\n\t\t\t\tlengend.style.position = 'relative'\r\n\t\t\t\tlengend.style.top = 0\r\n\t\t\t\tlengend.style.justifyContent = 'start';\r\n\t\t\t\tlengend.style.padding = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t} \r\n\r\n\tuseEffect(() => {\r\n\t\tsetLegendOffset()\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [])\r\n\t\r\n\tconst extraRef = useRef(null);\r\n\tconst chartRef = useRef();\r\n\t\r\n\toptions.xaxis.categories = xAxis\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\t\r\n\tconst onResize = () => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetLegendOffset()\t\r\n\t\t}, 600);\r\n\t}\r\n\r\n\tconst { ref: resizeRef } = useResizeDetector({\r\n\t\tonResize: () => {\r\n\t\t\tonResize()\r\n\t\t}\r\n\t});\r\n\r\n\tconst renderChart = () => (\r\n\t\t<div ref={resizeRef}>\r\n\t\t\t<div style={direction === DIR_RTL ? {direction: 'ltr'}: {}} className=\"chartRef\" ref={chartRef}>\r\n\t\t\t\t<ApexChart options={options} type={type} series={series} width={width} height={height}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{card ? \r\n\t\t\t\t<Card >\r\n\t\t\t\t\t<div className={`position-relative ${bodyClass}`}>\r\n\t\t\t\t\t\t{<div style={!isMobile ? titleStyle : {}}>{title}</div> && <h4 className=\"font-weight-bold\" style={!isMobile ? titleStyle : {}}>{title}</h4>}\r\n\t\t\t\t\t\t{extra && <div ref={extraRef} style={!isMobile ? extraStyle : {}}>{extra}</div>}\r\n\t\t\t\t\t\t{renderChart()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card> \r\n\t\t\t\t: \r\n\t\t\t\trenderChart()\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nChartWidget.propTypes = {\r\n\ttitle: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.element\r\n\t]),\r\n\tseries: PropTypes.array.isRequired,\r\n\txAxis: PropTypes.array,\r\n\tcustomOptions: PropTypes.object,\r\n\twidth: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\theight: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n\tcard: PropTypes.bool,\r\n\ttype: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nChartWidget.defaultProps = {\r\n\tseries: [],\r\n\theight: 300,\r\n\twidth: '100%',\r\n\tcard: true,\r\n\ttype: 'line'\r\n};\r\n\r\nexport default ChartWidget\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Value = props => {\r\n\tlet value;\r\n\tswitch(props.size) {\r\n\t\tcase 'lg':\r\n\t\t\tvalue = <h1 className=\"mb-0 font-weight-bold\">{props.value}</h1>\r\n\t\t\tbreak;\r\n\t\tcase 'md':\r\n\t\t\tvalue = <h2 className=\"mb-0 font-weight-bold\">{props.value}</h2>\r\n\t\t\tbreak;\r\n\t\tcase 'sm':\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalue = <h3 className=\"mb-0 font-weight-bold\">{props.value}</h3>\r\n\t}\r\n\treturn value\r\n}\r\n\r\nexport const CustomStatistic = props => {\r\n\tconst { size, value, title } = props;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Value value={value} size={size}/>\r\n\t\t\t<p className=\"mb-0 text-muted\">{title}</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nCustomStatistic.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tsize: PropTypes.string,\r\n\tvalue: PropTypes.oneOfType([\r\n\t\tPropTypes.string,\r\n\t\tPropTypes.number\r\n\t]),\r\n}\r\n\r\nCustomStatistic.defaultProps = {\r\n\tsize: 'md'\r\n};\r\n\r\n\r\nexport default CustomStatistic\r\n","import React from 'react'\r\nimport { Card, Avatar } from 'antd'\r\nimport Flex from '../Flex'\r\nimport CustomStatistic from '../CustomStatistic'\r\n\r\nconst DataDisplayWidget = props => {\r\n\tconst { size, value, title, icon, color, avatarSize, vertical } = props\r\n\tconst customStatisticProps = { size, value, title }\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" flexDirection={vertical ? 'column' : 'row'}>\r\n\t\t\t\t<Avatar size={avatarSize} shape=\"square\" icon={icon} className={`ant-avatar-${color}`}/>\r\n\t\t\t\t<div className={vertical ? 'mt-3 text-center' : 'ml-3'}>\r\n\t\t\t\t\t<CustomStatistic {...customStatisticProps}/>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDataDisplayWidget.defaultProps = {\r\n\tavatarSize: 50,\r\n\tvertical: false\r\n};\r\n\r\nexport default DataDisplayWidget\r\n","import React from 'react'\r\nimport { Card } from 'antd';\r\nimport ApexChart from \"react-apexcharts\";\r\nimport { apexPieChartDefaultOption } from 'constants/ChartConstant';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst defaultOption = apexPieChartDefaultOption;\r\n\r\nconst Chart = props => {\r\n\treturn (\r\n\t\t<ApexChart {...props} />\r\n\t)\r\n}\r\n\r\nconst DonutChartWidget = props => {\r\n\tconst { series, customOptions, labels, width, height, title, extra, bodyClass } = props\r\n\tlet options = JSON.parse(JSON.stringify(defaultOption))\r\n\toptions.labels = labels\r\n\toptions.plotOptions.pie.donut.labels.total.label = title\r\n\tif(!title) {\r\n\t\toptions.plotOptions.pie.donut.labels.show = false\r\n\t}\r\n\tif(customOptions) {\r\n\t\toptions = {...options, ...customOptions }\r\n\t}\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<div className={`text-center ${bodyClass}`}>\r\n\t\t\t\t<Chart type=\"donut\" options={options} series={series} width={width} height={height} />\r\n\t\t\t\t{extra}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nDonutChartWidget.propTypes = {\r\n\tseries: PropTypes.array.isRequired,\r\n\tlabels: PropTypes.array,\r\n\ttitle: PropTypes.string,\r\n\textra: PropTypes.element,\r\n\tbodyClass: PropTypes.string\r\n}\r\n\r\nDonutChartWidget.defaultProps = {\r\n\tseries: [],\r\n\tlabels: [],\r\n\ttitle: '',\r\n\theight: 250,\r\n\twidth: '100%'\r\n};\r\n\r\nexport default DonutChartWidget\r\n","import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","export const COLOR_1 = '#3e82f7';  // blue\r\nexport const COLOR_2 = '#04d182';  // cyan\r\nexport const COLOR_3 = '#ff6b72';  // volcano\r\nexport const COLOR_4 = '#ffc107';  // gold\r\nexport const COLOR_5 = '#a461d8';  // purple\r\nexport const COLOR_6 = '#fa8c16';  // orange\r\nexport const COLOR_7 = '#17bcff';  // geekblue\r\n\r\nexport const COLOR_1_LIGHT = 'rgba(62, 130, 247, 0.15)';\r\nexport const COLOR_2_LIGHT = 'rgba(4, 209, 130, 0.1)';\r\nexport const COLOR_3_LIGHT = 'rgba(222, 68, 54, 0.1)';\r\nexport const COLOR_4_LIGHT = 'rgba(255, 193, 7, 0.1)';\r\nexport const COLOR_5_LIGHT = 'rgba(139, 75, 157, 0.1)';\r\nexport const COLOR_6_LIGHT = 'rgba(250, 140, 22, .1)';\r\nexport const COLOR_7_LIGHT = 'rgba(23, 188, 255, 0.15)';\r\n\r\nexport const COLORS = [\r\n\tCOLOR_1,\r\n\tCOLOR_2,\r\n\tCOLOR_3,\r\n\tCOLOR_4,\r\n\tCOLOR_5,\r\n\tCOLOR_6,\r\n\tCOLOR_7\r\n]\r\n\r\nexport const COLORS_LIGHT = [\r\n\tCOLOR_1_LIGHT,\r\n\tCOLOR_2_LIGHT,\r\n\tCOLOR_3_LIGHT,\r\n\tCOLOR_4_LIGHT,\r\n\tCOLOR_5_LIGHT,\r\n\tCOLOR_6_LIGHT,\r\n\tCOLOR_7_LIGHT\r\n]\r\n\r\nexport const COLOR_AXES = '#edf2f9';\r\nexport const COLOR_TEXT = '#455560';\r\n\r\nexport const apexLineChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 3,\r\n\t\tcurve: 'smooth',\r\n\t\tlineCap: 'round'\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tgrid: {\r\n\t\txaxis: {\r\n\t\t\tlines: {\r\n\t\t\t\tshow: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t  yaxis: {\r\n\t\t\tlines: {\r\n\t\t\t  show: false,\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport const apexAreaChartDefaultOption = {...apexLineChartDefaultOption}\r\n\r\nexport const apexBarChartDefaultOption = {\r\n\tchart: {\r\n\t\tzoom: {\r\n\t\t\tenabled: false\r\n\t\t},\r\n\t\ttoolbar: {\r\n\t\t\tshow: false\r\n\t\t}\r\n\t},\r\n\tplotOptions: {\r\n\t\tbar: {\r\n\t\t\thorizontal: false,\r\n\t\t\tcolumnWidth: '25px',\r\n\t\t\tstartingShapre: 'rounded',\r\n\t\t\tendingShape: 'rounded'\r\n\t\t},\r\n\t},\r\n\tcolors: [...COLORS],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tstroke: {\r\n\t\tshow: true,\r\n\t\twidth: 6,\r\n\t\tcurve: 'smooth',\r\n\t\tcolors: ['transparent']\r\n\t},\r\n\tlegend: {\r\n\t\tposition: 'top',\r\n\t\thorizontalAlign: 'right',\r\n\t\toffsetY: -15,\r\n\t\tinverseOrder: true,\r\n\t\titemMargin: {\r\n\t\t\tvertical: 20\r\n\t\t},\r\n\t\ttooltipHoverFormatter: function(val, opts) {\r\n\t\t\treturn val + ' - ' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + ''\r\n\t\t}\r\n\t},\r\n\txaxis: {\r\n\t\tcategories: [],\r\n\t},\r\n\tfill: {\r\n\t\topacity: 1\r\n\t},\r\n\ttooltip: {\r\n\t\ty: {\r\n\t\t\tformatter: val => (`${val}`)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport const apexPieChartDefaultOption = {\r\n\tcolors: [...COLORS],\r\n\tplotOptions: {\r\n\t\tpie: {\r\n\t\t\tsize: 50,\r\n\t\t  donut: {\r\n\t\t\t\tlabels: {\r\n\t\t\t\t\tshow: true,\r\n\t\t\t\t\ttotal: {\r\n\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\tshowAlways: true,\r\n\t\t\t\t\t\tlabel: '',\r\n\t\t\t\t\t\tfontSize: '18px',\r\n\t\t\t\t\t\tfontFamily: 'Roboto',\r\n\t\t\t\t\t\tfontWeight: 'bold',\r\n\t\t\t\t\t\tcolor: '#1a3353',\r\n\t\t\t\t\t\tformatter: function (w) {\r\n\t\t\t\t\t\t\treturn w.globals.seriesTotals.reduce((a, b) => {\r\n\t\t\t\t\t\t\t\treturn a + b\r\n\t\t\t\t\t\t\t}, 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tsize: '87%'\r\n\t\t  }\r\n\t\t}\r\n\t},\r\n\tlabels: [],\r\n\tdataLabels: {\r\n\t\tenabled: false\r\n\t},\r\n\tlegend: {\r\n\t\tshow: false\r\n\t}\r\n}\r\n\r\nexport const apexSparklineChartDefultOption = {\r\n\tchart: {\r\n\t\ttype: 'line',\r\n\t\tsparkline: {\r\n\t\t\tenabled: true\r\n\t\t}\r\n\t},\r\n\tstroke: {\r\n\t\twidth: 2,\r\n\t\tcurve: 'smooth'\r\n\t},\r\n\ttooltip: {\r\n\t\tfixed: {\r\n\t\t  \tenabled: false\r\n\t\t},\r\n\t\tx: {\r\n\t\t  \tshow: false\r\n\t\t},\r\n\t\ty: {\r\n\t\t\ttitle: {\r\n\t\t\t\tformatter: function (seriesName) {\r\n\t\t\t\t\treturn ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmarker: {\r\n\t\t  show: false\r\n\t\t}\r\n\t}\r\n}","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\"; ","class Utils {\r\n\r\n\t/**\r\n\t * Get first character from first & last sentences of a username\r\n\t * @param {String} name - Username\r\n\t * @return {String} 2 characters string\r\n\t */\r\n\tstatic getNameInitial(name) {\r\n\t\tlet initials = name.match(/\\b\\w/g) || [];\r\n\t\treturn ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n\t}\r\n\r\n\t/**\r\n\t * Get current path related object from Navigation Tree\r\n\t * @param {Array} navTree - Navigation Tree from directory 'configs/NavigationConfig'\r\n\t * @param {String} path - Location path you looking for e.g '/app/dashboards/analytic'\r\n\t * @return {Object} object that contained the path string\r\n\t */\r\n\tstatic getRouteInfo(navTree, path) {\r\n\t\tif( navTree.path === path ){\r\n\t\t  \treturn navTree;\r\n\t\t}\r\n\t\tlet route; \r\n\t\tfor (let p in navTree) {\r\n\t\t\tif( navTree.hasOwnProperty(p) && typeof navTree[p] === 'object' ) {\r\n\t\t\t\troute = this.getRouteInfo(navTree[p], path);\r\n\t\t\t\tif(route){\r\n\t\t\t\t\treturn route;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn route;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Get accessible color contrast\r\n\t * @param {String} hex - Hex color code e.g '#3e82f7'\r\n\t * @return {String} 'dark' or 'light'\r\n\t */\r\n\tstatic getColorContrast(hex){\r\n\t\tif(!hex) {\r\n\t\t\treturn 'dark'\r\n\t\t}\r\n\t\tconst threshold = 130;\r\n\t\tconst hRed = hexToR(hex);\r\n\t\tconst hGreen = hexToG(hex);\r\n\t\tconst hBlue = hexToB(hex);\r\n\t\tfunction hexToR(h) {return parseInt((cutHex(h)).substring(0,2),16)}\r\n\t\tfunction hexToG(h) {return parseInt((cutHex(h)).substring(2,4),16)}\r\n\t\tfunction hexToB(h) {return parseInt((cutHex(h)).substring(4,6),16)}\r\n\t\tfunction cutHex(h) {return (h.charAt(0) === '#') ? h.substring(1,7):h}\r\n\t\tconst cBrightness = ((hRed * 299) + (hGreen * 587) + (hBlue * 114)) / 1000;\r\n\t\tif (cBrightness > threshold){\r\n\t\t\treturn 'dark'\r\n\t\t} else { \r\n\t\t\treturn 'light'\r\n\t\t}\t\r\n\t}\r\n\r\n\t/**\r\n\t * Darken or lighten a hex color \r\n\t * @param {String} color - Hex color code e.g '#3e82f7'\r\n\t * @param {Number} percent - Percentage -100 to 100, positive for lighten, negative for darken\r\n\t * @return {String} Darken or lighten color \r\n\t */\r\n\tstatic shadeColor(color, percent) {\r\n\t\tlet R = parseInt(color.substring(1,3),16);\r\n\t\tlet G = parseInt(color.substring(3,5),16);\r\n\t\tlet B = parseInt(color.substring(5,7),16);\r\n\t\tR = parseInt(R * (100 + percent) / 100);\r\n\t\tG = parseInt(G * (100 + percent) / 100);\r\n\t\tB = parseInt(B * (100 + percent) / 100);\r\n\t\tR = (R<255)?R:255;  \r\n\t\tG = (G<255)?G:255;  \r\n\t\tB = (B<255)?B:255;  \r\n\t\tconst RR = ((R.toString(16).length === 1) ? `0${R.toString(16)}` : R.toString(16));\r\n\t\tconst GG = ((G.toString(16).length === 1) ? `0${G.toString(16)}` : G.toString(16));\r\n\t\tconst BB = ((B.toString(16).length === 1) ? `0${B.toString(16)}` : B.toString(16));\r\n\t\treturn `#${RR}${GG}${BB}`; \r\n\t}\r\n\r\n\t/**\r\n\t * Convert RGBA to HEX \r\n\t * @param {String} rgba - RGBA color code e.g 'rgba(197, 200, 198, .2)')'\r\n\t * @return {String} HEX color \r\n\t */\r\n\tstatic rgbaToHex(rgba) {\r\n\t\tconst trim = str => (str.replace(/^\\s+|\\s+$/gm,''))\r\n\t\tconst inParts = rgba.substring(rgba.indexOf(\"(\")).split(\",\"),\r\n\t\t\tr = parseInt(trim(inParts[0].substring(1)), 10),\r\n\t\t\tg = parseInt(trim(inParts[1]), 10),\r\n\t\t\tb = parseInt(trim(inParts[2]), 10),\r\n\t\t\ta = parseFloat(trim(inParts[3].substring(0, inParts[3].length - 1))).toFixed(2);\r\n\t\t\tconst outParts = [\r\n\t\t\tr.toString(16),\r\n\t\t\tg.toString(16),\r\n\t\t\tb.toString(16),\r\n\t\t\tMath.round(a * 255).toString(16).substring(0, 2)\r\n\t\t];\r\n\r\n\t\toutParts.forEach(function (part, i) {\r\n\t\t\tif (part.length === 1) {\r\n\t\t\t\toutParts[i] = '0' + part;\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn (`#${outParts.join('')}`);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either a positive or negative \r\n\t * @param {Number} number - number value\r\n\t * @param {any} positive - value that return when positive\r\n\t * @param {any} negative - value that return when negative\r\n\t * @return {any} positive or negative value based on param\r\n\t */\r\n\tstatic getSignNum(number, positive, negative) {\r\n\t\tif (number > 0) {\r\n\t\t\treturn positive\r\n\t\t}\r\n\t\tif (number < 0) {\r\n\t\t\treturn negative\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\t/**\r\n\t * Returns either ascending or descending value\r\n\t * @param {Object} a - antd Table sorter param a\r\n\t * @param {Object} b - antd Table sorter param b\r\n\t * @param {String} key - object key for compare\r\n\t * @return {any} a value minus b value\r\n\t */\r\n\tstatic antdTableSorter(a, b, key) {\r\n\t\tif(typeof a[key] === 'number' && typeof b[key] === 'number') {\r\n\t\t\treturn a[key] - b[key]\r\n\t\t}\r\n\r\n\t\tif(typeof a[key] === 'string' && typeof b[key] === 'string') {\r\n\t\t\ta = a[key].toLowerCase();\r\n\t\t\tb = b[key].toLowerCase();\r\n\t\t\treturn a > b ? -1 : b > a ? 1 : 0;\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\r\n\t/**\r\n\t * Filter array of object \r\n\t * @param {Array} list - array of objects that need to filter\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - value that excluded from filter\r\n\t * @return {Array} a value minus b value\r\n\t */\r\n\tstatic filterArray(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] === value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Remove object from array by value\r\n\t * @param {Array} list - array of objects\r\n\t * @param {String} key - object key target\r\n\t * @param {any} value  - target value\r\n\t * @return {Array} Array that removed target object\r\n\t */\r\n\tstatic deleteArrayRow(list, key, value) {\r\n\t\tlet data = list\r\n\t\tif(list) {\r\n\t\t\tdata = list.filter(item => item[key] !== value)\r\n\t\t}\r\n\t\treturn data\r\n\t}\r\n\r\n\t/**\r\n\t * Wild card search on all property of the object\r\n\t * @param {Number | String} input - any value to search\r\n\t * @param {Array} list - array for search\r\n\t * @return {Array} array of object contained keyword\r\n\t */\r\n\tstatic wildCardSearch(list, input) {\r\n\t\tconst searchText = (item) => {\r\n\t\t\tfor (let key in item) {\r\n\t\t\t\tif (item[key] == null) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\tif (item[key].toString().toUpperCase().indexOf(input.toString().toUpperCase()) !== -1) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tlist = list.filter(value => searchText(value));\r\n\t\treturn list;\r\n\t}\r\n\r\n\t/**\r\n\t * Get Breakpoint\r\n\t * @param {Object} screens - Grid.useBreakpoint() from antd\r\n\t * @return {Array} array of breakpoint size\r\n\t */\r\n\tstatic getBreakPoint(screens) {\r\n\t\tlet breakpoints = []\r\n\t\tfor (const key in screens) {\r\n\t\t\tif (screens.hasOwnProperty(key)) {\r\n\t\t\t\tconst element = screens[key];\r\n\t\t\t\tif (element) {\r\n\t\t\t\t\tbreakpoints.push(key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn breakpoints\r\n\t}\r\n}\r\n\r\nexport default Utils;","import { COLORS } from 'constants/ChartConstant';\r\n\r\nexport const weeklyRevenueData = {\r\n\tseries: [\r\n\t  {\r\n\t\tname: 'Earning',\r\n\t\tdata: [45, 52, 38, 24, 33, 26, 21]\r\n\t  }\r\n\t],\r\n\tcategories:[\r\n\t  '08 Jul', \r\n\t  '09 Jul', \r\n\t  '10 Jul', \r\n\t  '11 Jul', \r\n\t  '12 Jul', \r\n\t  '13 Jul', \r\n\t  '14 Jul'\r\n\t]\r\n}\r\n\r\nexport const topProductData = [\r\n\t{\r\n\t\tname: 'Blue Jacket',\r\n\t\timage: '/img/thumbs/thumb-7.jpg',\r\n\t\tcategory: 'Cloths',\r\n\t\tsales: 5930,\r\n\t\tstatus: 'up'\r\n\t},\r\n\t{\r\n\t\tname: 'White Sneaker',\r\n\t\timage: '/img/thumbs/thumb-12.jpg',\r\n\t\tcategory: 'Cloths',\r\n\t\tsales: 5177,\r\n\t\tstatus: 'up'\r\n\t},\r\n\t{\r\n\t\tname: 'Red Beat Headphone',\r\n\t\timage: '/img/thumbs/thumb-14.jpg',\r\n\t\tcategory: 'Devices',\r\n\t\tsales: 4701,\r\n\t\tstatus: 'down'\r\n\t},\r\n\t{\r\n\t\tname: 'Apple Watch',\r\n\t\timage: '/img/thumbs/thumb-17.jpg',\r\n\t\tcategory: 'Devices',\r\n\t\tsales: 2833,\r\n\t\tstatus: 'up'\r\n\t},\r\n\t{\r\n\t\tname: 'Blue Backpack',\r\n\t\timage: '/img/thumbs/thumb-11.jpg',\r\n\t\tcategory: 'Bags',\r\n\t\tsales: 1692,\r\n\t\tstatus: 'down'\r\n\t},\r\n]\r\n\r\nexport const customerChartData = [\r\n\t{\r\n\t\tname: 'Store Customers',\r\n\t\tdata: [28, 25, 64, 40, 75, 45, 70]\r\n\t},\r\n\t{\r\n\t\tname: 'Online Customers',\r\n\t\tdata: [25, 15, 41, 25, 44, 12, 36]\r\n\t}\r\n]\r\n\r\nexport const sessionColor = [COLORS[0], COLORS[1], COLORS[3], COLORS[5]]\r\nexport const sessionData = [3561, 1443, 2462, 1693]\r\nexport const sessionLabels = ['Cloths', 'Devices', 'Bags', 'Watches']\r\nconst jointSessionData = () => {\r\n\tlet arr = []\r\n\tfor (let i = 0; i < sessionData.length; i++) {\r\n\t\tconst data = sessionData[i];\r\n\t\tconst label = sessionLabels[i];\r\n\t\tconst color = sessionColor[i]\r\n\t\tarr = [...arr, {\r\n\t\t\tdata: data,\r\n\t\t\tlabel: label,\r\n\t\t\tcolor: color\r\n\t\t}]\r\n\t}\r\n\treturn arr\r\n}\r\nexport const conbinedSessionData = jointSessionData()\r\n\r\nexport const recentOrderData = [\r\n\t{\r\n\t\tid: '#5331',\r\n\t\tname: 'Eileen Horton',\r\n\t\timage: '/img/avatars/thumb-1.jpg',\r\n\t\tdate: 1573430400,\r\n\t\tamount: 677,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Ready'\r\n\t},\r\n\t{\r\n\t\tid: '#5328',\r\n\t\tname: 'Terrance Moreno',\r\n\t\timage: '/img/avatars/thumb-2.jpg',\r\n\t\tdate: 1572393600,\r\n\t\tamount: 1328.35,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Ready'\r\n\t},\r\n\t{\r\n\t\tid: '#5321',\r\n\t\tname: 'Ron Vargas',\r\n\t\timage: '/img/avatars/thumb-3.jpg',\r\n\t\tdate: 1593949805,\r\n\t\tamount: 629,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Shipped'\r\n\t},\r\n\t{\r\n\t\tid: '#5287',\r\n\t\tname: 'Luke Cook',\r\n\t\timage: '/img/avatars/thumb-4.jpg',\r\n\t\tdate: 1579132800,\r\n\t\tamount: 25.9,\r\n\t\tpaymentStatus: 'Paid',\r\n\t\torderStatus: 'Shipped'\r\n\t},\r\n\t{\r\n\t\tid: '#5351',\r\n\t\tname: 'Joyce Freeman',\r\n\t\timage: '/img/avatars/thumb-5.jpg',\r\n\t\tdate: 1591286400,\r\n\t\tamount: 817.5,\r\n\t\tpaymentStatus: 'Pending',\r\n\t\torderStatus: 'Ready'\r\n\t},\r\n]","import React from \"react\";\r\nimport { Row, Col, Button, Card, Table, Tag, Select, Badge } from 'antd';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport DataDisplayWidget from 'components/shared-components/DataDisplayWidget';\r\nimport DonutChartWidget from 'components/shared-components/DonutChartWidget'\r\nimport NumberFormat from 'react-number-format';\r\nimport { \r\n\tCloudDownloadOutlined, \r\n\tArrowUpOutlined,\r\n\tArrowDownOutlined,\r\n\tUserSwitchOutlined,\r\n\tFileDoneOutlined,\r\n\tSyncOutlined,\r\n\tBarChartOutlined\r\n} from '@ant-design/icons';\r\nimport ChartWidget from 'components/shared-components/ChartWidget';\r\nimport { COLORS } from 'constants/ChartConstant';\r\nimport { \r\n\tweeklyRevenueData, \r\n\ttopProductData, \r\n\tcustomerChartData,\r\n\tsessionData, \r\n  sessionLabels, \r\n  conbinedSessionData,\r\n\tsessionColor,\r\n\trecentOrderData\r\n} from './SalesDashboardData'\r\nimport dayjs from 'dayjs'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst { Option } = Select;\r\n\r\nconst getPaymentStatus = status => {\r\n\tif(status === 'Paid') {\r\n\t\treturn 'success'\r\n\t}\r\n\tif(status === 'Pending') {\r\n\t\treturn 'warning'\r\n\t}\r\n\tif(status === 'Expired') {\r\n\t\treturn 'error'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst getShippingStatus = status => {\r\n\tif(status === 'Ready') {\r\n\t\treturn 'blue'\r\n\t}\r\n\tif(status === 'Shipped') {\r\n\t\treturn 'cyan'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst WeeklyRevenue = () => {\r\n\tconst { direction } = useSelector(state => state.theme)\r\n\treturn (<Card>\r\n\t\t<Row gutter={16}>\r\n\t\t\t<Col xs={24} sm={24} md={24} lg={8}>\r\n\t\t\t\t<Flex className=\"h-100\" flexDirection=\"column\" justifyContent=\"space-between\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h4 className=\"mb-0\">Weekly Revenue</h4>\r\n\t\t\t\t\t\t<span className=\"text-muted\">8 - 15 Jul, 2020</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t<h1 className=\"font-weight-bold\">$27,188.00</h1>\r\n\t\t\t\t\t\t<p className=\"text-success\">\r\n\t\t\t\t\t\t\t<span >\r\n\t\t\t\t\t\t\t\t<ArrowUpOutlined />\r\n\t\t\t\t\t\t\t\t<span> 17% </span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span>growth from last week</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p>Total gross income figure based from the date range given above.</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Col>\r\n\t\t\t<Col xs={24} sm={24} md={24} lg={16}>\r\n\t\t\t\t<div className=\"mb-3 text-right\">\r\n\t\t\t\t\t<Button icon={<CloudDownloadOutlined/>}>Download Report</Button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<ChartWidget \r\n\t\t\t\t\tcard={false}\r\n\t\t\t\t\tseries={weeklyRevenueData.series} \r\n\t\t\t\t\txAxis={weeklyRevenueData.categories} \r\n\t\t\t\t\ttitle=\"Unique Visitors\"\r\n\t\t\t\t\theight={250}\r\n\t\t\t\t\ttype=\"bar\"\r\n\t\t\t\t\tcustomOptions={{colors: COLORS}}\r\n\t\t\t\t\tdirection={direction}\r\n\t\t\t\t/>\r\n\t\t\t</Col>\r\n\t\t</Row>\r\n\t</Card>)\r\n}\r\n\r\nconst DisplayDataSet = () => (\r\n\t<Row gutter={16}>\r\n\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<FileDoneOutlined />} \r\n\t\t\t\tvalue=\"11,831\"\r\n\t\t\t\ttitle=\"Total order\"\t\r\n\t\t\t\tcolor=\"cyan\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<BarChartOutlined />} \r\n\t\t\t\tvalue=\"$6,922\"\r\n\t\t\t\ttitle=\"Total profit\"\t\r\n\t\t\t\tcolor=\"gold\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t</Col>\r\n\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={12}>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<SyncOutlined />} \r\n\t\t\t\tvalue=\"26.9%\"\r\n\t\t\t\ttitle=\"Conversion rate\"\t\r\n\t\t\t\tcolor=\"blue\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t\t<DataDisplayWidget \r\n\t\t\t\ticon={<UserSwitchOutlined />} \r\n\t\t\t\tvalue=\"873\"\r\n\t\t\t\ttitle=\"Daily visitors\"\t\r\n\t\t\t\tcolor=\"volcano\"\r\n\t\t\t\tvertical={true}\r\n\t\t\t\tavatarSize={55}\r\n\t\t\t/>\r\n\t\t</Col>\r\n\t</Row>\r\n)\r\n\r\nconst TopProduct = () => (\r\n\t<Card \r\n\t\ttitle=\"Top Product\" \r\n\t\textra={\r\n\t\t\t<Select defaultValue=\"week\" size=\"small\" style={{minWidth: 110}}>\r\n\t\t\t\t<Option value=\"week\">This Week</Option>\r\n\t\t\t\t<Option value=\"month\">This Month</Option>\r\n\t\t\t\t<Option value=\"year\">This Year</Option>\r\n\t\t\t</Select>\r\n\t\t}\r\n\t>\r\n\t\t{topProductData.map(elm => (\r\n\t\t\t<Flex className=\"w-100 py-3\" justifyContent=\"space-between\" alignItems=\"center\" key={elm.name}>\r\n\t\t\t\t<AvatarStatus shape=\"square\" src={elm.image} name={elm.name} subTitle={elm.category}/>\r\n\t\t\t\t<Flex>\r\n\t\t\t\t\t<div className=\"mr-3 text-right\">\r\n\t\t\t\t\t\t<span className=\"text-muted\">Sales</span>\r\n\t\t\t\t\t\t<div className=\"mb-0 h5 font-weight-bold\">\r\n\t\t\t\t\t\t\t<NumberFormat prefix={'$'} value={elm.sales} thousandSeparator={true} displayType=\"text\" />\r\n\t\t\t\t\t\t\t{elm.status === 'up' ? <ArrowUpOutlined className=\"text-success\"/> : <ArrowDownOutlined className=\"text-danger\"/>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Flex>\r\n\t\t))}\r\n\t</Card>\r\n)\r\n\r\nconst SalesByCategory = () => (\r\n\t<DonutChartWidget \r\n\t\tseries={sessionData} \r\n\t\tlabels={sessionLabels} \r\n\t\ttitle=\"Sales by Category\"\r\n\t\tcustomOptions={{colors: sessionColor}}\r\n\t\tbodyClass=\"mb-2 mt-3\"\r\n\t\textra={\r\n\t\t\t<Row  justify=\"center\">\r\n\t\t\t\t<Col xs={20} sm={20} md={20} lg={24}>\r\n\t\t\t\t\t<div className=\"mt-4 mx-auto\" style={{maxWidth: 200}}>\r\n\t\t\t\t\t\t{conbinedSessionData.map(elm => (\r\n\t\t\t\t\t\t\t<Flex alignItems=\"center\" justifyContent=\"space-between\" className=\"mb-3\" key={elm.label}>\r\n\t\t\t\t\t\t\t\t<Flex gap={5}>\r\n\t\t\t\t\t\t\t\t\t<Badge color={elm.color} />\r\n\t\t\t\t\t\t\t\t\t<span className=\"text-gray-light\">{elm.label}</span>\r\n\t\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t\t\t<span className=\"font-weight-bold text-dark\">{elm.data}</span>\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t}\r\n\t/>\r\n)\r\n\r\nconst Customers = () => {\r\n\tconst { direction } = useSelector(state => state.theme)\r\n\treturn (\r\n\t\t<Card \r\n\t\t\ttitle=\"Customers\"\r\n\t\t\textra={\r\n\t\t\t\t<Select defaultValue=\"week\" size=\"small\" style={{minWidth: 110}}>\r\n\t\t\t\t\t<Option value=\"week\">This Week</Option>\r\n\t\t\t\t\t<Option value=\"month\">This Month</Option>\r\n\t\t\t\t\t<Option value=\"year\">This Year</Option>\r\n\t\t\t\t</Select>\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Flex>\r\n\t\t\t\t<div className=\"mr-5\">\r\n\t\t\t\t\t<h2 className=\"font-weight-bold mb-1\">523,201</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<Badge color={COLORS[6]}/>\r\n\t\t\t\t\t\t<span className=\"mx-2\">Store Customers</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2 className=\"font-weight-bold mb-1\">379,237</h2>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t<Badge color={COLORS[0]}/>\r\n\t\t\t\t\t\t<span className=\"mx-2\">Online Customers</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div>\r\n\t\t\t\t<ChartWidget \r\n\t\t\t\t\tcard={false}\r\n\t\t\t\t\tseries={customerChartData} \r\n\t\t\t\t\txAxis={weeklyRevenueData.categories}\r\n\t\t\t\t\theight={280}\r\n\t\t\t\t\tdirection={direction}\r\n\t\t\t\t\tcustomOptions={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcolors: [COLORS[6], COLORS[0]],\r\n\t\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\t\tshow: false\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tstroke: {\r\n\t\t\t\t\t\t\t\twidth: 2.5,\r\n\t\t\t\t\t\t\t\tcurve: 'smooth'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nconst tableColumns = [\r\n\t{\r\n\t\ttitle: 'ID',\r\n\t\tdataIndex: 'id'\r\n\t},\r\n\t{\r\n\t\ttitle: 'Product',\r\n\t\tdataIndex: 'name',\r\n\t\trender: (_, record) => (\r\n\t\t\t<Flex>\r\n\t\t\t\t<AvatarStatus size={30} src={record.image} name={record.name}/>\r\n\t\t\t</Flex>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Date',\r\n\t\tdataIndex: 'date',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span>{dayjs.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Order status',\r\n\t\tdataIndex: 'orderStatus',\r\n\t\trender: (_, record) => (\r\n\t\t\t<><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Payment status',\r\n\t\tdataIndex: 'paymentStatus',\r\n\t\trender: (_, record) => (\r\n\t\t\t<>\r\n\t\t\t\t<Badge status={getPaymentStatus(record.paymentStatus)} />\r\n\t\t\t\t<span className=\"mx-2\">{record.paymentStatus}</span>\r\n\t\t\t</>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n\t},\r\n\t{\r\n\t\ttitle: 'Total',\r\n\t\tdataIndex: 'amount',\r\n\t\trender: (_, record) => (\r\n\t\t\t<span className=\"font-weight-semibold\">\r\n\t\t\t\t<NumberFormat\r\n\t\t\t\t\tdisplayType={'text'} \r\n\t\t\t\t\tvalue={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n\t\t\t\t\tprefix={'$'} \r\n\t\t\t\t\tthousandSeparator={true} \r\n\t\t\t\t/>\r\n\t\t\t</span>\r\n\t\t),\r\n\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n\t}\r\n]\r\n\r\nconst RecentOrder = () => (\r\n\t<Card title=\"Recent Order\">\r\n\t\t<Table\r\n\t\t\tpagination={false}\r\n\t\t\tcolumns={tableColumns} \r\n\t\t\tdataSource={recentOrderData} \r\n\t\t\trowKey='id'\r\n\t\t/>\r\n\t</Card>\r\n)\r\n\r\nconst SalesDashboard = () => {\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={16} xl={15} xxl={14}>\r\n\t\t\t\t\t<WeeklyRevenue />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={8} xl={9} xxl={10}>\r\n\t\t\t\t\t<DisplayDataSet />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={7} >\r\n\t\t\t\t\t<TopProduct />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={12} xl={12} xxl={7}>\r\n\t\t\t\t\t<SalesByCategory />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={10}>\r\n\t\t\t\t\t<Customers />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row gutter={16}>\r\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24}>\r\n\t\t\t\t\t<RecentOrder />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SalesDashboard\r\n"],"names":["renderAvatar","props","_jsx","Avatar","className","concat","type","children","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","_jsxs","onClick","_ref","style","rest","AntdCard","marginBottom","titleStyle","position","zIndex","extraStyle","right","top","ChartWidget","title","series","width","height","xAxis","customOptions","card","extra","direction","bodyClass","options","JSON","parse","stringify","apexLineChartDefaultOption","apexBarChartDefaultOption","apexAreaChartDefaultOption","getChartTypeDefaultOption","isMobile","window","innerWidth","setLegendOffset","chartRef","current","_extraRef$current","lengend","querySelectorAll","marginRight","extraRef","offsetWidth","DIR_RTL","left","justifyContent","padding","useEffect","useRef","xaxis","categories","ref","resizeRef","useResizeDetector","onResize","setTimeout","renderChart","ApexChart","_Fragment","Card","defaultProps","Value","value","CustomStatistic","DataDisplayWidget","color","avatarSize","vertical","customStatisticProps","Flex","alignItems","flexDirection","defaultOption","apexPieChartDefaultOption","Chart","DonutChartWidget","labels","plotOptions","pie","donut","total","label","show","styled","div","margin","baseStyle","display","COLOR_1","COLOR_2","COLOR_4","COLOR_1_LIGHT","COLOR_2_LIGHT","COLORS","COLOR_AXES","COLOR_TEXT","chart","zoom","enabled","toolbar","colors","dataLabels","stroke","curve","lineCap","legend","horizontalAlign","offsetY","itemMargin","tooltipHoverFormatter","val","opts","w","globals","seriesIndex","dataPointIndex","grid","lines","yaxis","bar","horizontal","columnWidth","startingShapre","endingShape","inverseOrder","fill","opacity","tooltip","y","formatter","showAlways","fontSize","fontFamily","fontWeight","seriesTotals","reduce","a","b","apexSparklineChartDefultOption","sparkline","fixed","x","seriesName","marker","DATE_FORMAT_DD_MM_YYYY","getNameInitial","initials","match","shift","pop","toUpperCase","getRouteInfo","navTree","path","route","p","hasOwnProperty","this","getColorContrast","hex","hRed","parseInt","cutHex","substring","hGreen","h","hexToG","hBlue","hexToB","charAt","shadeColor","percent","R","G","B","RR","toString","length","GG","BB","rgbaToHex","rgba","trim","str","replace","inParts","indexOf","split","r","g","parseFloat","toFixed","outParts","Math","round","forEach","part","i","join","getSignNum","number","positive","negative","antdTableSorter","key","toLowerCase","filterArray","list","data","filter","item","deleteArrayRow","wildCardSearch","input","searchText","getBreakPoint","screens","breakpoints","push","weeklyRevenueData","topProductData","image","category","sales","status","customerChartData","sessionColor","sessionData","sessionLabels","conbinedSessionData","jointSessionData","arr","recentOrderData","date","amount","paymentStatus","orderStatus","Option","Select","WeeklyRevenue","useSelector","state","theme","Row","gutter","Col","xs","sm","md","lg","ArrowUpOutlined","Button","CloudDownloadOutlined","DisplayDataSet","xl","xxl","FileDoneOutlined","BarChartOutlined","SyncOutlined","UserSwitchOutlined","TopProduct","defaultValue","minWidth","map","elm","AvatarStatus","NumberFormat","prefix","thousandSeparator","displayType","ArrowDownOutlined","SalesByCategory","justify","maxWidth","Badge","Customers","tableColumns","dataIndex","render","_","record","sorter","utils","dayjs","format","Tag","RecentOrder","Table","pagination","columns","dataSource","rowKey","SalesDashboard"],"sourceRoot":""}